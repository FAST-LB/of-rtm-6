wmake libso .
g++ -std=c++11 -m64 -Dlinux64 -DWM_ARCH_OPTION=64 -DWM_DP -DWM_LABEL_SIZE=32 -Wall -Wextra -Wold-style-cast -Wnon-virtual-dtor -Wno-unused-parameter -Wno-invalid-offsetof -Wno-attributes -O3  -DNoRepository -ftemplate-depth-100 -I/home/julian/OpenFOAM-6/src/triSurface/lnInclude -I/home/julian/OpenFOAM-6/src/meshTools/lnInclude  -IlnInclude -I. -I/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude -I/home/julian/OpenFOAM-6/src/OSspecific/POSIX/lnInclude   -fPIC -c cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C -o /home/julian/OpenFOAM-6/platforms/linux64GccDPInt32Opt/src/finiteVolume/cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.o
In file included from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:0:
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:129:58: error: expected ‘)’ before ‘;’ token
         virtual tmp<tensorField> F(const tensorField& FVF;
                                                          ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C: In member function ‘virtual Foam::tmp<Foam::Field<Foam::Tensor<double> > > Foam::Gebart::calcResistance(const tensorField&)’:
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:51: error: no match for ‘operator-’ (operand types are ‘int’ and ‘const Foam::Tensor<double>’)
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                   ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/zero.H:107:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/UList.H:49,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/List.H:43,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/HashTable.C:30,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/HashTable.H:566,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/objectRegistry.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:44,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/zeroI.H:53:13: note: candidate: Foam::zero Foam::operator-(const Foam::zero&, const Foam::zero&)
 inline zero operator-(const zero&, const zero&)
             ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/zeroI.H:53:13: note:   no known conversion for argument 1 from ‘int’ to ‘const Foam::zero&’
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/zeroI.H:59:20: note: candidate: template<class Type> const Type& Foam::operator-(const Type&, const Foam::zero&)
 inline const Type& operator-(const Type& t, const zero&)
                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/zeroI.H:59:20: note:   template argument deduction/substitution failed:
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   cannot convert ‘(& FVF_)->Foam::Field<Foam::Tensor<double> >::<anonymous>.Foam::List<Foam::Tensor<double> >::<anonymous>.Foam::UList<T>::operator[]<Foam::Tensor<double> >(j)’ (type ‘const Foam::Tensor<double>’) to type ‘const Foam::zero&’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/zero.H:107:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/UList.H:49,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/List.H:43,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/HashTable.C:30,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/HashTable.H:566,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/objectRegistry.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:44,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/zeroI.H:65:13: note: candidate: template<class Type> Type Foam::operator-(const Foam::zero&, const Type&)
 inline Type operator-(const zero&, const Type& t)
             ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/zeroI.H:65:13: note:   template argument deduction/substitution failed:
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   cannot convert ‘1’ (type ‘int’) to type ‘const Foam::zero&’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/VectorSpace.H:226:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Vector.H:44,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/vector.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/point.H:35,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/pointField.H:35,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/VectorSpaceI.H:650:13: note: candidate: template<class Form, class Cmpt, unsigned char Ncmpts> Form Foam::operator-(const Foam::VectorSpace<Form, Cmpt, Ncmpts>&)
 inline Form operator-
             ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/VectorSpaceI.H:650:13: note:   template argument deduction/substitution failed:
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/VectorSpace.H:226:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Vector.H:44,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/vector.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/point.H:35,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/pointField.H:35,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/VectorSpaceI.H:674:13: note: candidate: template<class Form, class Cmpt, unsigned char Ncmpts> Form Foam::operator-(const Foam::VectorSpace<Form, Cmpt, Ncmpts>&, const Foam::VectorSpace<Form, Cmpt, Ncmpts>&)
 inline Form operator-
             ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/VectorSpaceI.H:674:13: note:   template argument deduction/substitution failed:
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.C:877,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.H:408,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/labelField.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveFields.H:37,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.C:68:24: note: candidate: template<class Type> Foam::tmp<Foam::Field<Type> > Foam::operator-(const Foam::UList<T>&)
 tmp<Field<ReturnType>> operator Op(const UList<Type>& f)                       \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:622:1: note: in expansion of macro ‘UNARY_OPERATOR’
 UNARY_OPERATOR(Type, Type, -, negate)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.C:68:24: note:   template argument deduction/substitution failed:
 tmp<Field<ReturnType>> operator Op(const UList<Type>& f)                       \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:622:1: note: in expansion of macro ‘UNARY_OPERATOR’
 UNARY_OPERATOR(Type, Type, -, negate)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::UList<T>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.C:877,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.H:408,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/labelField.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveFields.H:37,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.C:76:24: note: candidate: template<class Type> Foam::tmp<Foam::Field<Type> > Foam::operator-(const Foam::tmp<Foam::Field<Type> >&)
 tmp<Field<ReturnType>> operator Op(const tmp<Field<Type>>& tf)                 \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:622:1: note: in expansion of macro ‘UNARY_OPERATOR’
 UNARY_OPERATOR(Type, Type, -, negate)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.C:76:24: note:   template argument deduction/substitution failed:
 tmp<Field<ReturnType>> operator Op(const tmp<Field<Type>>& tf)                 \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:622:1: note: in expansion of macro ‘UNARY_OPERATOR’
 UNARY_OPERATOR(Type, Type, -, negate)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::tmp<Foam::Field<Type> >’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.C:877:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.H:408,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/labelField.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveFields.H:37,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:652:1: note: candidate: template<class Type1, class Type2> Foam::tmp<Foam::Field<typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator-(const Foam::UList<T>&, const Foam::UList<Key>&)
 operator Op(const UList<Type1>& f1, const UList<Type2>& f2)                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:771:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:652:1: note:   template argument deduction/substitution failed:
 operator Op(const UList<Type1>& f1, const UList<Type2>& f2)                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:771:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::UList<T>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.C:877:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.H:408,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/labelField.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveFields.H:37,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:662:1: note: candidate: template<class Type1, class Type2> Foam::tmp<Foam::Field<typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator-(const Foam::UList<T>&, const Foam::tmp<Foam::Field<Type2> >&)
 operator Op(const UList<Type1>& f1, const tmp<Field<Type2>>& tf2)              \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:771:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:662:1: note:   template argument deduction/substitution failed:
 operator Op(const UList<Type1>& f1, const tmp<Field<Type2>>& tf2)              \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:771:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::UList<T>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.C:877:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.H:408,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/labelField.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveFields.H:37,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:673:1: note: candidate: template<class Type1, class Type2> Foam::tmp<Foam::Field<typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator-(const Foam::tmp<Foam::Field<Type> >&, const Foam::UList<Key>&)
 operator Op(const tmp<Field<Type1>>& tf1, const UList<Type2>& f2)              \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:771:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:673:1: note:   template argument deduction/substitution failed:
 operator Op(const tmp<Field<Type1>>& tf1, const UList<Type2>& f2)              \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:771:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::tmp<Foam::Field<Type> >’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.C:877:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.H:408,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/labelField.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveFields.H:37,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:684:1: note: candidate: template<class Type1, class Type2> Foam::tmp<Foam::Field<typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator-(const Foam::tmp<Foam::Field<Type> >&, const Foam::tmp<Foam::Field<Type2> >&)
 operator Op(const tmp<Field<Type1>>& tf1, const tmp<Field<Type2>>& tf2)        \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:771:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:684:1: note:   template argument deduction/substitution failed:
 operator Op(const tmp<Field<Type1>>& tf1, const tmp<Field<Type2>>& tf2)        \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:771:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::tmp<Foam::Field<Type> >’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.C:877:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.H:408,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/labelField.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveFields.H:37,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:710:1: note: candidate: template<class Type, class Form, class Cmpt, unsigned char nCmpt> Foam::tmp<Foam::Field<typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator-(const Foam::UList<T>&, const Foam::VectorSpace<Form, Cmpt, nCmpt>&)
 operator Op(const UList<Type>& f1, const VectorSpace<Form,Cmpt,nCmpt>& vs)     \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:771:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:710:1: note:   template argument deduction/substitution failed:
 operator Op(const UList<Type>& f1, const VectorSpace<Form,Cmpt,nCmpt>& vs)     \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:771:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::UList<T>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.C:877:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.H:408,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/labelField.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveFields.H:37,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:720:1: note: candidate: template<class Type, class Form, class Cmpt, unsigned char nCmpt> Foam::tmp<Foam::Field<typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator-(const Foam::tmp<Foam::Field<Type> >&, const Foam::VectorSpace<Form, Cmpt, nCmpt>&)
 operator Op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:771:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:720:1: note:   template argument deduction/substitution failed:
 operator Op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:771:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::tmp<Foam::Field<Type> >’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.C:877:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.H:408,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/labelField.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveFields.H:37,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:748:1: note: candidate: template<class Form, class Cmpt, unsigned char nCmpt, class Type> Foam::tmp<Foam::Field<typename Foam::typeOfSum<Form, Type>::type> > Foam::operator-(const Foam::VectorSpace<Form, Cmpt, Ncmpts>&, const Foam::UList<Type>&)
 operator Op(const VectorSpace<Form,Cmpt,nCmpt>& vs, const UList<Type>& f1)     \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:771:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:748:1: note:   template argument deduction/substitution failed:
 operator Op(const VectorSpace<Form,Cmpt,nCmpt>& vs, const UList<Type>& f1)     \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:771:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.C:877:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.H:408,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/labelField.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveFields.H:37,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:758:1: note: candidate: template<class Form, class Cmpt, unsigned char nCmpt, class Type> Foam::tmp<Foam::Field<typename Foam::typeOfSum<Form, Type>::type> > Foam::operator-(const Foam::VectorSpace<Form, Cmpt, Ncmpts>&, const Foam::tmp<Foam::Field<Type> >&)
 operator Op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:771:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:758:1: note:   template argument deduction/substitution failed:
 operator Op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:771:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarField.H:42:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.H:360,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.H:405,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/labelField.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveFields.H:37,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:207:24: note: candidate: Foam::tmp<Foam::Field<double> > Foam::operator-(const scalar&, const Foam::UList<double>&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarField.H:84:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:207:24: note:   no known conversion for argument 2 from ‘const Foam::Tensor<double>’ to ‘const Foam::UList<double>&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarField.H:84:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:214:24: note: candidate: Foam::tmp<Foam::Field<double> > Foam::operator-(const scalar&, const Foam::tmp<Foam::Field<double> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarField.H:84:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:214:24: note:   no known conversion for argument 2 from ‘const Foam::Tensor<double>’ to ‘const Foam::tmp<Foam::Field<double> >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarField.H:84:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:232:24: note: candidate: Foam::tmp<Foam::Field<double> > Foam::operator-(const Foam::UList<double>&, const scalar&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarField.H:84:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:232:24: note:   no known conversion for argument 1 from ‘int’ to ‘const Foam::UList<double>&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarField.H:84:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:239:24: note: candidate: Foam::tmp<Foam::Field<double> > Foam::operator-(const Foam::tmp<Foam::Field<double> >&, const scalar&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarField.H:84:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:239:24: note:   no known conversion for argument 1 from ‘int’ to ‘const Foam::tmp<Foam::Field<double> >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarField.H:84:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, subtract)
 ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Tensor.H:231:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/SymmTensorI.H:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/SymmTensor.H:155,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/symmTensor.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/fieldTypes.H:37,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/flipOp.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/mapDistributeBaseTemplates.C:29,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/mapDistributeBase.H:489,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldMapper.H:35,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.C:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.H:408,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/labelField.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveFields.H:37,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/TensorI.H:706:1: note: candidate: template<class Cmpt> Foam::Tensor<Cmpt> Foam::operator-(const Foam::SphericalTensor<Cmpt>&, const Foam::Tensor<Cmpt>&)
 operator-(const SphericalTensor<Cmpt>& st1, const Tensor<Cmpt>& t2)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/TensorI.H:706:1: note:   template argument deduction/substitution failed:
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::SphericalTensor<Cmpt>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Tensor.H:231:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/SymmTensorI.H:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/SymmTensor.H:155,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/symmTensor.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/fieldTypes.H:37,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/flipOp.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/mapDistributeBaseTemplates.C:29,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/mapDistributeBase.H:489,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldMapper.H:35,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.C:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.H:408,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/labelField.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveFields.H:37,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/TensorI.H:719:1: note: candidate: template<class Cmpt> Foam::Tensor<Cmpt> Foam::operator-(const Foam::Tensor<Cmpt>&, const Foam::SphericalTensor<Cmpt>&)
 operator-(const Tensor<Cmpt>& t1, const SphericalTensor<Cmpt>& st2)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/TensorI.H:719:1: note:   template argument deduction/substitution failed:
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::Tensor<Cmpt>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Tensor.H:231:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/SymmTensorI.H:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/SymmTensor.H:155,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/symmTensor.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/fieldTypes.H:37,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/flipOp.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/mapDistributeBaseTemplates.C:29,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/mapDistributeBase.H:489,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldMapper.H:35,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.C:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.H:408,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/labelField.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveFields.H:37,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/TensorI.H:842:1: note: candidate: template<class Cmpt> Foam::Tensor<Cmpt> Foam::operator-(const Foam::SymmTensor<Cmpt>&, const Foam::Tensor<Cmpt>&)
 operator-(const SymmTensor<Cmpt>& st1, const Tensor<Cmpt>& t2)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/TensorI.H:842:1: note:   template argument deduction/substitution failed:
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::SymmTensor<Cmpt>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Tensor.H:231:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/SymmTensorI.H:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/SymmTensor.H:155,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/symmTensor.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/fieldTypes.H:37,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/flipOp.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/mapDistributeBaseTemplates.C:29,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/mapDistributeBase.H:489,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldMapper.H:35,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.C:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.H:408,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/labelField.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveFields.H:37,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/TensorI.H:855:1: note: candidate: template<class Cmpt> Foam::Tensor<Cmpt> Foam::operator-(const Foam::Tensor<Cmpt>&, const Foam::SymmTensor<Cmpt>&)
 operator-(const Tensor<Cmpt>& t1, const SymmTensor<Cmpt>& st2)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/TensorI.H:855:1: note:   template argument deduction/substitution failed:
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::Tensor<Cmpt>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/SymmTensor.H:155:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/symmTensor.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/fieldTypes.H:37,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/flipOp.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/mapDistributeBaseTemplates.C:29,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/mapDistributeBase.H:489,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldMapper.H:35,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.C:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.H:408,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/labelField.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveFields.H:37,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/SymmTensorI.H:449:1: note: candidate: template<class Cmpt> Foam::SymmTensor<Cmpt> Foam::operator-(const Foam::SphericalTensor<Cmpt>&, const Foam::SymmTensor<Cmpt>&)
 operator-(const SphericalTensor<Cmpt>& spt1, const SymmTensor<Cmpt>& st2)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/SymmTensorI.H:449:1: note:   template argument deduction/substitution failed:
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::SphericalTensor<Cmpt>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/SymmTensor.H:155:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/symmTensor.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/fieldTypes.H:37,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/flipOp.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/mapDistributeBaseTemplates.C:29,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/mapDistributeBase.H:489,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldMapper.H:35,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.C:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.H:408,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/labelField.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveFields.H:37,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/SymmTensorI.H:462:1: note: candidate: template<class Cmpt> Foam::SymmTensor<Cmpt> Foam::operator-(const Foam::SymmTensor<Cmpt>&, const Foam::SphericalTensor<Cmpt>&)
 operator-(const SymmTensor<Cmpt>& st1, const SphericalTensor<Cmpt>& spt2)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/SymmTensorI.H:462:1: note:   template argument deduction/substitution failed:
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::SymmTensor<Cmpt>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/labelField.H:42:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveFields.H:37,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:207:24: note: candidate: Foam::tmp<Foam::Field<int> > Foam::operator-(const label&, const Foam::UList<int>&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/labelField.H:54:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(label, label, label, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:207:24: note:   no known conversion for argument 2 from ‘const Foam::Tensor<double>’ to ‘const Foam::UList<int>&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/labelField.H:54:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(label, label, label, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:214:24: note: candidate: Foam::tmp<Foam::Field<int> > Foam::operator-(const label&, const Foam::tmp<Foam::Field<int> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/labelField.H:54:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(label, label, label, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:214:24: note:   no known conversion for argument 2 from ‘const Foam::Tensor<double>’ to ‘const Foam::tmp<Foam::Field<int> >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/labelField.H:54:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(label, label, label, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:232:24: note: candidate: Foam::tmp<Foam::Field<int> > Foam::operator-(const Foam::UList<int>&, const label&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/labelField.H:54:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(label, label, label, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:232:24: note:   no known conversion for argument 1 from ‘int’ to ‘const Foam::UList<int>&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/labelField.H:54:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(label, label, label, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:239:24: note: candidate: Foam::tmp<Foam::Field<int> > Foam::operator-(const Foam::tmp<Foam::Field<int> >&, const label&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/labelField.H:54:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(label, label, label, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:239:24: note:   no known conversion for argument 1 from ‘int’ to ‘const Foam::tmp<Foam::Field<int> >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/labelField.H:54:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(label, label, label, -, subtract)
 ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionedType.H:40:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionedScalar.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/TimeState.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Time.H:47,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dataTemplates.C:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/data.H:117,
                 from lnInclude/fvMesh.H:57,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionSet.H:381:29: note: candidate: Foam::dimensionSet Foam::operator-(const Foam::dimensionSet&)
         friend dimensionSet operator-(const dimensionSet&);
                             ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionSet.H:381:29: note:   candidate expects 1 argument, 2 provided
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionSet.H:389:29: note: candidate: Foam::dimensionSet Foam::operator-(const Foam::dimensionSet&, const Foam::dimensionSet&)
         friend dimensionSet operator-
                             ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionSet.H:389:29: note:   no known conversion for argument 1 from ‘int’ to ‘const Foam::dimensionSet&’
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Matrix.H:383:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/RectangularMatrix.H:41,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarMatrices.H:43,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionSets.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionSet.H:439,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionedType.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionedScalar.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/TimeState.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Time.H:47,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dataTemplates.C:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/data.H:117,
                 from lnInclude/fvMesh.H:57,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Matrix.C:443:6: note: candidate: template<class Form, class Type> Form Foam::operator-(const Foam::Matrix<Form, Type>&)
 Form Foam::operator-(const Matrix<Form, Type>& M)
      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Matrix.C:443:6: note:   template argument deduction/substitution failed:
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::Matrix<Form, Type>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Matrix.H:383:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/RectangularMatrix.H:41,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarMatrices.H:43,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionSets.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionSet.H:439,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionedType.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionedScalar.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/TimeState.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Time.H:47,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dataTemplates.C:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/data.H:117,
                 from lnInclude/fvMesh.H:57,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Matrix.C:499:6: note: candidate: template<class Form, class Type> Form Foam::operator-(const Foam::Matrix<Form, Type>&, const Foam::Matrix<Form, Type>&)
 Form Foam::operator-(const Matrix<Form, Type>& A, const Matrix<Form, Type>& B)
      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Matrix.C:499:6: note:   template argument deduction/substitution failed:
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::Matrix<Form, Type>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionedType.H:340:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionedScalar.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/TimeState.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Time.H:47,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dataTemplates.C:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/data.H:117,
                 from lnInclude/fvMesh.H:57,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionedType.C:673:25: note: candidate: template<class Type> Foam::dimensioned<Type> Foam::operator-(const Foam::dimensioned<Type>&)
 Foam::dimensioned<Type> Foam::operator-(const dimensioned<Type>& dt)
                         ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionedType.C:673:25: note:   template argument deduction/substitution failed:
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::dimensioned<Type>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionedType.H:340:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionedScalar.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/TimeState.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Time.H:47,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dataTemplates.C:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/data.H:117,
                 from lnInclude/fvMesh.H:57,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionedType.C:685:25: note: candidate: template<class Type> Foam::dimensioned<Type> Foam::operator-(const Foam::dimensioned<Type>&, const Foam::dimensioned<Type>&)
 Foam::dimensioned<Type> Foam::operator-
                         ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionedType.C:685:25: note:   template argument deduction/substitution failed:
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::dimensioned<Type>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/TimeState.H:38:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Time.H:47,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dataTemplates.C:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/data.H:117,
                 from lnInclude/fvMesh.H:57,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionedScalar.H:52:19: note: candidate: Foam::dimensionedScalar Foam::operator-(const dimensionedScalar&, Foam::scalar)
 dimensionedScalar operator-(const dimensionedScalar&, const scalar);
                   ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionedScalar.H:52:19: note:   no known conversion for argument 2 from ‘const Foam::Tensor<double>’ to ‘Foam::scalar {aka double}’
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionedScalar.H:53:19: note: candidate: Foam::dimensionedScalar Foam::operator-(Foam::scalar, const dimensionedScalar&)
 dimensionedScalar operator-(const scalar, const dimensionedScalar&);
                   ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionedScalar.H:53:19: note:   no known conversion for argument 2 from ‘const Foam::Tensor<double>’ to ‘const dimensionedScalar& {aka const Foam::dimensioned<double>&}’
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.H:157,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.H:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:363,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:534:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator-(const Foam::dimensioned<double>&, const Foam::DimensionedField<double, GeoMesh>&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:685:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:93:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:534:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:685:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:93:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::DimensionedField<double, GeoMesh>’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.H:157,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.H:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:363,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:561:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator-(const scalar&, const Foam::DimensionedField<double, GeoMesh>&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:685:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:93:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:561:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:685:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:93:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::DimensionedField<double, GeoMesh>’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.H:157,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.H:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:363,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:572:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator-(const Foam::dimensioned<double>&, const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:685:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:93:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:572:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:685:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:93:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.H:157,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.H:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:363,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:598:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator-(const scalar&, const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:685:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:93:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:598:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:685:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:93:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.H:157,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.H:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:363,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:611:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator-(const Foam::DimensionedField<double, GeoMesh>&, const Foam::dimensioned<double>&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:686:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:93:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:611:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:686:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:93:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::DimensionedField<double, GeoMesh>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.H:157,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.H:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:363,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:638:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator-(const Foam::DimensionedField<double, GeoMesh>&, const scalar&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:686:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:93:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:638:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:686:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:93:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::DimensionedField<double, GeoMesh>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.H:157,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.H:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:363,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:649:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator-(const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >&, const Foam::dimensioned<double>&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:686:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:93:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:649:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:686:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:93:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.H:157,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.H:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:363,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:675:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator-(const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >&, const scalar&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:686:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:93:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:675:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:686:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:93:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.C:532,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:366,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:89:44: note: candidate: template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::operator-(const Foam::DimensionedField<Type, GeoMesh>&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:353:1: note: in expansion of macro ‘UNARY_OPERATOR’
 UNARY_OPERATOR(Type, Type, -, negate, transform)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:89:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:353:1: note: in expansion of macro ‘UNARY_OPERATOR’
 UNARY_OPERATOR(Type, Type, -, negate, transform)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::DimensionedField<Type, GeoMesh>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.C:532,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:366,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:115:44: note: candidate: template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::operator-(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:353:1: note: in expansion of macro ‘UNARY_OPERATOR’
 UNARY_OPERATOR(Type, Type, -, negate, transform)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:115:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:353:1: note: in expansion of macro ‘UNARY_OPERATOR’
 UNARY_OPERATOR(Type, Type, -, negate, transform)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.C:532:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:366,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:371:1: note: candidate: template<class Type1, class Type2, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<arg1, arg2>::type, GeoMesh> > Foam::operator-(const Foam::DimensionedField<TypeR, GeoMesh>&, const Foam::DimensionedField<Type1, GeoMesh>&)
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:643:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:371:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:643:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::DimensionedField<TypeR, GeoMesh>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.C:532:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:366,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:400:1: note: candidate: template<class Type1, class Type2, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<arg1, arg2>::type, GeoMesh> > Foam::operator-(const Foam::DimensionedField<TypeR, GeoMesh>&, const Foam::tmp<Foam::DimensionedField<Type1, GeoMesh> >&)
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:643:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:400:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:643:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::DimensionedField<TypeR, GeoMesh>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.C:532:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:366,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:427:1: note: candidate: template<class Type1, class Type2, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<arg1, arg2>::type, GeoMesh> > Foam::operator-(const Foam::tmp<Foam::DimensionedField<TypeR, GeoMesh> >&, const Foam::DimensionedField<Type1, GeoMesh>&)
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:643:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:427:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:643:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::tmp<Foam::DimensionedField<TypeR, GeoMesh> >’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.C:532:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:366,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:454:1: note: candidate: template<class Type1, class Type2, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<arg1, arg2>::type, GeoMesh> > Foam::operator-(const Foam::tmp<Foam::DimensionedField<TypeR, GeoMesh> >&, const Foam::tmp<Foam::DimensionedField<Type1, GeoMesh> >&)
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:643:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:454:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:643:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::tmp<Foam::DimensionedField<TypeR, GeoMesh> >’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.C:532:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:366,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:485:1: note: candidate: template<class Form, class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<Type, Form>::type, GeoMesh> > Foam::operator-(const Foam::DimensionedField<Type1, GeoMesh>&, const Foam::dimensioned<Type>&)
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:643:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:485:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:643:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::DimensionedField<Type1, GeoMesh>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.C:532:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:366,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:515:1: note: candidate: template<class Form, class Cmpt, unsigned char nCmpt, class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<Form, Type>::type, GeoMesh> > Foam::operator-(const Foam::DimensionedField<Type2, GeoMesh>&, const Foam::VectorSpace<Form, Cmpt, Ncmpts>&)
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:643:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:515:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:643:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::DimensionedField<Type2, GeoMesh>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.C:532:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:366,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:527:1: note: candidate: template<class Form, class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<Type, Form>::type, GeoMesh> > Foam::operator-(const Foam::tmp<Foam::DimensionedField<Type1, GeoMesh> >&, const Foam::dimensioned<Type>&)
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:643:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:527:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:643:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::tmp<Foam::DimensionedField<Type1, GeoMesh> >’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.C:532:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:366,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:554:1: note: candidate: template<class Form, class Cmpt, unsigned char nCmpt, class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<Form, Type>::type, GeoMesh> > Foam::operator-(const Foam::tmp<Foam::DimensionedField<Type2, GeoMesh> >&, const Foam::VectorSpace<Form, Cmpt, Ncmpts>&)
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:643:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:554:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:643:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::tmp<Foam::DimensionedField<Type2, GeoMesh> >’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.C:532:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:366,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:566:1: note: candidate: template<class Form, class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<arg1, arg2>::type, GeoMesh> > Foam::operator-(const Foam::dimensioned<Type>&, const Foam::DimensionedField<Type1, GeoMesh>&)
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:643:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:566:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:643:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::dimensioned<Type>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.C:532:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:366,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:595:1: note: candidate: template<class Form, class Cmpt, unsigned char nCmpt, class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<Form, Type>::type, GeoMesh> > Foam::operator-(const Foam::VectorSpace<Form, Cmpt, Ncmpts>&, const Foam::DimensionedField<Type2, GeoMesh>&)
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:643:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:595:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:643:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.C:532:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:366,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:606:1: note: candidate: template<class Form, class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<arg1, arg2>::type, GeoMesh> > Foam::operator-(const Foam::dimensioned<Type>&, const Foam::tmp<Foam::DimensionedField<Type1, GeoMesh> >&)
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:643:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:606:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:643:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::dimensioned<Type>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.C:532:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:366,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:633:1: note: candidate: template<class Form, class Cmpt, unsigned char nCmpt, class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<Form, Type>::type, GeoMesh> > Foam::operator-(const Foam::VectorSpace<Form, Cmpt, Ncmpts>&, const Foam::tmp<Foam::DimensionedField<Type2, GeoMesh> >&)
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:643:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:633:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:643:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.C:32:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.H:158,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.H:195,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:407:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, double> > Foam::operator-(const scalar&, const Foam::FieldField<Field, double>&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:487:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.C:86:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:407:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:487:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.C:86:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::FieldField<Field, double>’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.C:32:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.H:158,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.H:195,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:422:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, double> > Foam::operator-(const scalar&, const Foam::tmp<Foam::FieldField<Field, double> >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:487:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.C:86:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:422:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:487:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.C:86:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::tmp<Foam::FieldField<Field, double> >’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.C:32:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.H:158,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.H:195,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:455:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, double> > Foam::operator-(const Foam::FieldField<Field, double>&, const scalar&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:488:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.C:86:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:455:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:488:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.C:86:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::FieldField<Field, double>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.C:32:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.H:158,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.H:195,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:470:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, double> > Foam::operator-(const Foam::tmp<Foam::FieldField<Field, double> >&, const scalar&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:488:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.C:86:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:470:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:488:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.C:86:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::tmp<Foam::FieldField<Field, double> >’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.C:390,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.H:198,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:91:36: note: candidate: template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::operator-(const Foam::FieldField<Field, Type>&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:610:1: note: in expansion of macro ‘UNARY_OPERATOR’
 UNARY_OPERATOR(Type, Type, -, negate)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:91:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:610:1: note: in expansion of macro ‘UNARY_OPERATOR’
 UNARY_OPERATOR(Type, Type, -, negate)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::FieldField<Field, Type>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.C:390,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.H:198,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:105:36: note: candidate: template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::operator-(const Foam::tmp<Foam::FieldField<Field, Type> >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:610:1: note: in expansion of macro ‘UNARY_OPERATOR’
 UNARY_OPERATOR(Type, Type, -, negate)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:105:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:610:1: note: in expansion of macro ‘UNARY_OPERATOR’
 UNARY_OPERATOR(Type, Type, -, negate)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::tmp<Foam::FieldField<Field, Type> >’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.C:390:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.H:198,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:654:1: note: candidate: template<template<class> class Field1, template<class> class Field2, class Type1, class Type2> Foam::tmp<Foam::FieldField<Field1, typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator-(const Foam::FieldField<Field, Type1>&, const Foam::FieldField<Field2, Type2>&)
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:902:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:654:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:902:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::FieldField<Field, Type1>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.C:390:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.H:198,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:671:1: note: candidate: template<template<class> class Field, class Type1, class Type2> Foam::tmp<Foam::FieldField<Field, typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator-(const Foam::FieldField<Field, Type>&, const Foam::tmp<Foam::FieldField<Field, Type1> >&)
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:902:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:671:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:902:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::FieldField<Field, Type>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.H:195:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:314:1: note: candidate: template<template<class> class Field1, template<class> class Field2, class Type1, class Type2> Foam::tmp<Foam::FieldField<Field1, typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator-(const Foam::FieldField<Field, Type1>&, const Foam::tmp<Foam::FieldField<Field2, Type2> >&)
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:439:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:314:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:439:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::FieldField<Field, Type1>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.C:390:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.H:198,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:719:1: note: candidate: template<template<class> class Field1, template<class> class Field2, class Type1, class Type2> Foam::tmp<Foam::FieldField<Field1, typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator-(const Foam::tmp<Foam::FieldField<Field, Type1> >&, const Foam::FieldField<Field2, Type2>&)
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:902:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:719:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:902:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::tmp<Foam::FieldField<Field, Type1> >’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.C:390:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.H:198,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:743:1: note: candidate: template<template<class> class Field1, template<class> class Field2, class Type1, class Type2> Foam::tmp<Foam::FieldField<Field1, typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator-(const Foam::tmp<Foam::FieldField<Field, Type1> >&, const Foam::tmp<Foam::FieldField<Field2, Type2> >&)
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:902:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:743:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:902:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::tmp<Foam::FieldField<Field, Type1> >’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.C:390:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.H:198,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:791:1: note: candidate: template<template<class> class Field, class Type, class Form, class Cmpt, unsigned char nCmpt> Foam::tmp<Foam::FieldField<Field, typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator-(const Foam::FieldField<Field, Type>&, const Foam::VectorSpace<Form, Cmpt, nCmpt>&)
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:902:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:791:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:902:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::FieldField<Field, Type>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.C:390:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.H:198,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:815:1: note: candidate: template<template<class> class Field, class Type, class Form, class Cmpt, unsigned char nCmpt> Foam::tmp<Foam::FieldField<Field, typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator-(const Foam::tmp<Foam::FieldField<Field, Type> >&, const Foam::VectorSpace<Form, Cmpt, nCmpt>&)
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:902:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:815:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:902:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::tmp<Foam::FieldField<Field, Type> >’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.C:390:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.H:198,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:861:1: note: candidate: template<template<class> class Field, class Type, class Form, class Cmpt, unsigned char nCmpt> Foam::tmp<Foam::FieldField<Field, typename Foam::typeOfSum<Form, Type>::type> > Foam::operator-(const Foam::VectorSpace<Form, Cmpt, nCmpt>&, const Foam::FieldField<Field, Type>&)
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:902:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:861:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:902:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::VectorSpace<Form, Cmpt, nCmpt>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.C:390:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.H:198,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:885:1: note: candidate: template<template<class> class Field, class Type, class Form, class Cmpt, unsigned char nCmpt> Foam::tmp<Foam::FieldField<Field, typename Foam::typeOfSum<Form, Type>::type> > Foam::operator-(const Foam::VectorSpace<Form, Cmpt, nCmpt>&, const Foam::tmp<Foam::FieldField<Field, Type> >&)
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:902:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:885:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:902:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::VectorSpace<Form, Cmpt, nCmpt>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.C:390:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.H:198,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:695:1: note: candidate: template<template<class> class Field1, template<class> class Field2, class Type1, class Type2> Foam::tmp<Foam::FieldField<Foam::Field, typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator-(const Foam::FieldField<Field, Type1>&, const Foam::tmp<Foam::FieldField<Field2, Type2> >&)
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:902:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:695:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:902:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::FieldField<Field, Type1>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DiagTensor.H:115:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensor.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/coupledPolyPatch.H:41,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/processorPolyPatch.H:42,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/processorTopology.H:30,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/globalMeshData.H:84,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricBoundaryField.C:28,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.C:1352,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DiagTensorI.H:150:1: note: candidate: template<class Cmpt> Foam::Tensor<Cmpt> Foam::operator-(const Foam::DiagTensor<Cmpt>&, const Foam::Tensor<Cmpt>&)
 operator-(const DiagTensor<Cmpt>& dt1, const Tensor<Cmpt>& t2)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DiagTensorI.H:150:1: note:   template argument deduction/substitution failed:
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::DiagTensor<Cmpt>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DiagTensor.H:115:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensor.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/coupledPolyPatch.H:41,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/processorPolyPatch.H:42,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/processorTopology.H:30,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/globalMeshData.H:84,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricBoundaryField.C:28,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.C:1352,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DiagTensorI.H:163:1: note: candidate: template<class Cmpt> Foam::Tensor<Cmpt> Foam::operator-(const Foam::Tensor<Cmpt>&, const Foam::DiagTensor<Cmpt>&)
 operator-(const Tensor<Cmpt>& t1, const DiagTensor<Cmpt>& dt2)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DiagTensorI.H:163:1: note:   template argument deduction/substitution failed:
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::Tensor<Cmpt>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:42:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/coupledPolyPatch.H:41,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/processorPolyPatch.H:42,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/processorTopology.H:30,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/globalMeshData.H:84,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricBoundaryField.C:28,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.C:1352,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:166:24: note: candidate: Foam::tmp<Foam::Field<Foam::Tensor<double> > > Foam::operator-(const Foam::UList<Foam::DiagTensor<double> >&, const Foam::UList<Foam::Tensor<double> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:61:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(tensor, diagTensor, tensor, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:166:24: note:   no known conversion for argument 1 from ‘int’ to ‘const Foam::UList<Foam::DiagTensor<double> >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:61:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(tensor, diagTensor, tensor, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:173:24: note: candidate: Foam::tmp<Foam::Field<Foam::Tensor<double> > > Foam::operator-(const Foam::UList<Foam::DiagTensor<double> >&, const Foam::tmp<Foam::Field<Foam::Tensor<double> > >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:61:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(tensor, diagTensor, tensor, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:173:24: note:   no known conversion for argument 1 from ‘int’ to ‘const Foam::UList<Foam::DiagTensor<double> >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:61:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(tensor, diagTensor, tensor, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:180:24: note: candidate: Foam::tmp<Foam::Field<Foam::Tensor<double> > > Foam::operator-(const Foam::tmp<Foam::Field<Foam::DiagTensor<double> > >&, const Foam::UList<Foam::Tensor<double> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:61:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(tensor, diagTensor, tensor, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:180:24: note:   no known conversion for argument 1 from ‘int’ to ‘const Foam::tmp<Foam::Field<Foam::DiagTensor<double> > >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:61:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(tensor, diagTensor, tensor, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:187:24: note: candidate: Foam::tmp<Foam::Field<Foam::Tensor<double> > > Foam::operator-(const Foam::tmp<Foam::Field<Foam::DiagTensor<double> > >&, const Foam::tmp<Foam::Field<Foam::Tensor<double> > >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:61:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(tensor, diagTensor, tensor, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:187:24: note:   no known conversion for argument 1 from ‘int’ to ‘const Foam::tmp<Foam::Field<Foam::DiagTensor<double> > >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:61:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(tensor, diagTensor, tensor, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:207:24: note: candidate: Foam::tmp<Foam::Field<Foam::Tensor<double> > > Foam::operator-(const diagTensor&, const Foam::UList<Foam::Tensor<double> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:64:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(tensor, diagTensor, tensor, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:207:24: note:   no known conversion for argument 1 from ‘int’ to ‘const diagTensor& {aka const Foam::DiagTensor<double>&}’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:64:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(tensor, diagTensor, tensor, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:214:24: note: candidate: Foam::tmp<Foam::Field<Foam::Tensor<double> > > Foam::operator-(const diagTensor&, const Foam::tmp<Foam::Field<Foam::Tensor<double> > >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:64:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(tensor, diagTensor, tensor, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:214:24: note:   no known conversion for argument 1 from ‘int’ to ‘const diagTensor& {aka const Foam::DiagTensor<double>&}’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:64:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(tensor, diagTensor, tensor, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:232:24: note: candidate: Foam::tmp<Foam::Field<Foam::Tensor<double> > > Foam::operator-(const Foam::UList<Foam::DiagTensor<double> >&, const tensor&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:64:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(tensor, diagTensor, tensor, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:232:24: note:   no known conversion for argument 1 from ‘int’ to ‘const Foam::UList<Foam::DiagTensor<double> >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:64:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(tensor, diagTensor, tensor, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:239:24: note: candidate: Foam::tmp<Foam::Field<Foam::Tensor<double> > > Foam::operator-(const Foam::tmp<Foam::Field<Foam::DiagTensor<double> > >&, const tensor&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:64:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(tensor, diagTensor, tensor, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:239:24: note:   no known conversion for argument 1 from ‘int’ to ‘const Foam::tmp<Foam::Field<Foam::DiagTensor<double> > >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:64:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(tensor, diagTensor, tensor, -, subtract)
 ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/quaternion.H:304:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/transformField.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/vectorTensorTransform.H:45,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/mapDistribute.H:138,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/globalMeshDataTemplates.C:28,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/globalMeshData.H:627,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricBoundaryField.C:28,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.C:1352,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/quaternionI.H:639:25: note: candidate: Foam::quaternion Foam::operator-(const Foam::quaternion&)
 inline Foam::quaternion Foam::operator-(const quaternion& q)
                         ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/quaternionI.H:639:25: note:   candidate expects 1 argument, 2 provided
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/quaternionI.H:645:25: note: candidate: Foam::quaternion Foam::operator-(const Foam::quaternion&, const Foam::quaternion&)
 inline Foam::quaternion Foam::operator-
                         ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/quaternionI.H:645:25: note:   no known conversion for argument 1 from ‘int’ to ‘const Foam::quaternion&’
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/septernion.H:206:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/transformField.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/vectorTensorTransform.H:45,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/mapDistribute.H:138,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/globalMeshDataTemplates.C:28,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/globalMeshData.H:627,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricBoundaryField.C:28,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.C:1352,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/septernionI.H:200:25: note: candidate: Foam::septernion Foam::operator-(const Foam::septernion&, const vector&)
 inline Foam::septernion Foam::operator-
                         ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/septernionI.H:200:25: note:   no known conversion for argument 1 from ‘int’ to ‘const Foam::septernion&’
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/vectorTensorTransform.H:261:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/mapDistribute.H:138,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/globalMeshDataTemplates.C:28,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/globalMeshData.H:627,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricBoundaryField.C:28,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.C:1352,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/vectorTensorTransformI.H:283:36: note: candidate: Foam::vectorTensorTransform Foam::operator-(const Foam::vectorTensorTransform&, const vector&)
 inline Foam::vectorTensorTransform Foam::operator-
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/vectorTensorTransformI.H:283:36: note:   no known conversion for argument 1 from ‘int’ to ‘const Foam::vectorTensorTransform&’
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.C:1353,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:118:54: note: candidate: template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::operator-(const Foam::GeometricField<Type, PatchField, GeoMesh>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:576:1: note: in expansion of macro ‘UNARY_OPERATOR’
 UNARY_OPERATOR(Type, Type, -, negate, transform)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:118:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:576:1: note: in expansion of macro ‘UNARY_OPERATOR’
 UNARY_OPERATOR(Type, Type, -, negate, transform)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.C:1353,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:146:54: note: candidate: template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::operator-(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:576:1: note: in expansion of macro ‘UNARY_OPERATOR’
 UNARY_OPERATOR(Type, Type, -, negate, transform)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:146:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:576:1: note: in expansion of macro ‘UNARY_OPERATOR’
 UNARY_OPERATOR(Type, Type, -, negate, transform)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.C:1353:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:622:1: note: candidate: template<class Type1, class Type2, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Type1, Type2>::type, PatchField, GeoMesh> > Foam::operator-(const Foam::GeometricField<TypeR, PatchField, GeoMesh>&, const Foam::GeometricField<Type1, PatchField, GeoMesh>&)
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:972:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:622:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:972:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::GeometricField<TypeR, PatchField, GeoMesh>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.C:1353:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:657:1: note: candidate: template<class Type1, class Type2, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Type1, Type2>::type, PatchField, GeoMesh> > Foam::operator-(const Foam::GeometricField<TypeR, PatchField, GeoMesh>&, const Foam::tmp<Foam::GeometricField<Type1, PatchField, GeoMesh> >&)
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:972:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:657:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:972:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::GeometricField<TypeR, PatchField, GeoMesh>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.C:1353:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:688:1: note: candidate: template<class Type1, class Type2, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Type1, Type2>::type, PatchField, GeoMesh> > Foam::operator-(const Foam::tmp<Foam::GeometricField<TypeR, PatchField, GeoMesh> >&, const Foam::GeometricField<Type1, PatchField, GeoMesh>&)
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:972:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:688:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:972:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::tmp<Foam::GeometricField<TypeR, PatchField, GeoMesh> >’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.C:1353:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:719:1: note: candidate: template<class Type1, class Type2, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Type1, Type2>::type, PatchField, GeoMesh> > Foam::operator-(const Foam::tmp<Foam::GeometricField<TypeR, PatchField, GeoMesh> >&, const Foam::tmp<Foam::GeometricField<Type1, PatchField, GeoMesh> >&)
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:972:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:719:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:972:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::tmp<Foam::GeometricField<TypeR, PatchField, GeoMesh> >’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.C:1353:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:765:1: note: candidate: template<class Form, class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Type, Form>::type, PatchField, GeoMesh> > Foam::operator-(const Foam::GeometricField<Type1, PatchField, GeoMesh>&, const Foam::dimensioned<Type>&)
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:972:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:765:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:972:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::GeometricField<Type1, PatchField, GeoMesh>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.C:1353:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:804:1: note: candidate: template<class Form, class Cmpt, unsigned char nCmpt, class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Form, Type>::type, PatchField, GeoMesh> > Foam::operator-(const Foam::GeometricField<Type2, PatchField, GeoMesh>&, const Foam::VectorSpace<Form, Cmpt, Ncmpts>&)
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:972:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:804:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:972:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::GeometricField<Type2, PatchField, GeoMesh>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.C:1353:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:817:1: note: candidate: template<class Form, class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Type, Form>::type, PatchField, GeoMesh> > Foam::operator-(const Foam::tmp<Foam::GeometricField<Type1, PatchField, GeoMesh> >&, const Foam::dimensioned<Type>&)
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:972:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:817:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:972:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::tmp<Foam::GeometricField<Type1, PatchField, GeoMesh> >’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.C:1353:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:851:1: note: candidate: template<class Form, class Cmpt, unsigned char nCmpt, class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Form, Type>::type, PatchField, GeoMesh> > Foam::operator-(const Foam::tmp<Foam::GeometricField<Type2, PatchField, GeoMesh> >&, const Foam::VectorSpace<Form, Cmpt, Ncmpts>&)
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:972:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:851:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:972:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::tmp<Foam::GeometricField<Type2, PatchField, GeoMesh> >’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.C:1353:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:878:1: note: candidate: template<class Form, class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Type1, Type2>::type, PatchField, GeoMesh> > Foam::operator-(const Foam::dimensioned<Type>&, const Foam::GeometricField<Type1, PatchField, GeoMesh>&)
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:972:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:878:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:972:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::dimensioned<Type>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.C:1353:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:916:1: note: candidate: template<class Form, class Cmpt, unsigned char nCmpt, class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Form, Type>::type, PatchField, GeoMesh> > Foam::operator-(const Foam::VectorSpace<Form, Cmpt, Ncmpts>&, const Foam::GeometricField<Type2, PatchField, GeoMesh>&)
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:972:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:916:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:972:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.C:1353:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:928:1: note: candidate: template<class Form, class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Type1, Type2>::type, PatchField, GeoMesh> > Foam::operator-(const Foam::dimensioned<Type>&, const Foam::tmp<Foam::GeometricField<Type1, PatchField, GeoMesh> >&)
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:972:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:928:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:972:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::dimensioned<Type>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.C:1353:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:962:1: note: candidate: template<class Form, class Cmpt, unsigned char nCmpt, class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Form, Type>::type, PatchField, GeoMesh> > Foam::operator-(const Foam::VectorSpace<Form, Cmpt, Ncmpts>&, const Foam::tmp<Foam::GeometricField<Type2, PatchField, GeoMesh> >&)
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:972:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:962:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:972:1: note: in expansion of macro ‘PRODUCT_OPERATOR’
 PRODUCT_OPERATOR(typeOfSum, -, subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:173,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:645:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator-(const Foam::dimensioned<double>&, const Foam::GeometricField<double, PatchField, GeoMesh>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:111:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:645:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:111:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::GeometricField<double, PatchField, GeoMesh>’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:173,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:674:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator-(const scalar&, const Foam::GeometricField<double, PatchField, GeoMesh>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:111:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:674:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:111:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::GeometricField<double, PatchField, GeoMesh>’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:173,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:685:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator-(const Foam::dimensioned<double>&, const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:111:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:685:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:111:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:173,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:711:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator-(const scalar&, const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:111:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:711:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:111:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:173,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:736:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator-(const Foam::GeometricField<double, PatchField, GeoMesh>&, const Foam::dimensioned<double>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:111:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:736:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:111:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::GeometricField<double, PatchField, GeoMesh>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:173,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:765:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator-(const Foam::GeometricField<double, PatchField, GeoMesh>&, const scalar&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:111:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:765:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:111:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::GeometricField<double, PatchField, GeoMesh>’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:173,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:776:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator-(const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >&, const Foam::dimensioned<double>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:111:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:776:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:111:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:173,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:802:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator-(const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >&, const scalar&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:111:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:802:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:111:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, -, '-', subtract)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:59: note:   mismatched types ‘const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >’ and ‘int’
         R_[j].xx() = scalar(1) / (constA * pow((1 - FVF_[j]), 3) / pow(FVF_[j], 2));
                                                           ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/doubleFloat.H:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/floatScalar.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalar.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/IOstream.H:49,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Ostream.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/OSstream.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/messageStream.H:217,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/error.H:51,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/HashTableI.H:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/HashTable.H:560,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/objectRegistry.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:44,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/products.H: In instantiation of ‘class Foam::powProduct<Foam::Tensor<double>, 2u>’:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/VectorSpaceI.H:378:43:   required by substitution of ‘template<class Form, class Cmpt, unsigned char Ncmpts> typename Foam::powProduct<Form, 2u>::type Foam::pow(const Foam::VectorSpace<Form, Cmpt, Ncmpts>&, typename Foam::powProduct<Form, 2u>::type) [with Form = Foam::Tensor<double>; Cmpt = double; unsigned char Ncmpts = 9u]’
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:174:82:   required from here
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/products.H:136:13: error: no type named ‘type’ in ‘class Foam::symmTypeOfRank<double, 4u>’
     >::type type;
             ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:62: error: no match for ‘operator/’ (operand types are ‘Foam::scalar {aka double}’ and ‘const Foam::Tensor<double>’)
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                              ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/IOstream.H:50:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Ostream.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/OSstream.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/messageStream.H:217,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/error.H:51,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/HashTableI.H:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/HashTable.H:560,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/objectRegistry.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:44,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/fileName.H:243:10: note: candidate: Foam::fileName Foam::operator/(const Foam::string&, const Foam::string&)
 fileName operator/(const string&, const string&);
          ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/fileName.H:243:10: note:   no known conversion for argument 2 from ‘const Foam::Tensor<double>’ to ‘const Foam::string&’
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/zero.H:107:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/UList.H:49,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/List.H:43,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/HashTable.C:30,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/HashTable.H:566,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/objectRegistry.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:44,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/zeroI.H:88:13: note: candidate: template<class Type> Foam::zero Foam::operator/(const Foam::zero&, const Type&)
 inline zero operator/(const zero&, const Type& t)
             ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/zeroI.H:88:13: note:   template argument deduction/substitution failed:
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:56: note:   cannot convert ‘((Foam::Gebart*)this)->Foam::Gebart::vfmax_’ (type ‘Foam::scalar {aka double}’) to type ‘const Foam::zero&’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                        ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/VectorSpace.H:226:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Vector.H:44,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/vector.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/point.H:35,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/pointField.H:35,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/VectorSpaceI.H:713:13: note: candidate: template<class Form, class Cmpt, unsigned char Ncmpts> Form Foam::operator/(const Foam::VectorSpace<Form, Cmpt, Ncmpts>&, Foam::scalar)
 inline Form operator/
             ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/VectorSpaceI.H:713:13: note:   template argument deduction/substitution failed:
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.C:877,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.H:408,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/labelField.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveFields.H:37,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.C:264:24: note: candidate: template<class Type> Foam::tmp<Foam::Field<Type> > Foam::operator/(const Foam::UList<T>&, const Foam::UList<double>&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:626:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.C:264:24: note:   template argument deduction/substitution failed:
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:626:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::UList<T>’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.C:877,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.H:408,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/labelField.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveFields.H:37,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.C:276:24: note: candidate: template<class Type> Foam::tmp<Foam::Field<Type> > Foam::operator/(const Foam::UList<T>&, const Foam::tmp<Foam::Field<double> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:626:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.C:276:24: note:   template argument deduction/substitution failed:
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:626:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::UList<T>’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.C:877,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.H:408,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/labelField.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveFields.H:37,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.C:289:24: note: candidate: template<class Type> Foam::tmp<Foam::Field<Type> > Foam::operator/(const Foam::tmp<Foam::Field<Type> >&, const Foam::UList<double>&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:626:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.C:289:24: note:   template argument deduction/substitution failed:
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:626:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::tmp<Foam::Field<Type> >’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.C:877,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.H:408,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/labelField.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveFields.H:37,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.C:302:24: note: candidate: template<class Type> Foam::tmp<Foam::Field<Type> > Foam::operator/(const Foam::tmp<Foam::Field<Type> >&, const Foam::tmp<Foam::Field<double> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:626:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.C:302:24: note:   template argument deduction/substitution failed:
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:626:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::tmp<Foam::Field<Type> >’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.C:877,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.H:408,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/labelField.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveFields.H:37,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.C:372:24: note: candidate: template<class Type> Foam::tmp<Foam::Field<Type> > Foam::operator/(const Foam::UList<T>&, const scalar&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:631:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.C:372:24: note:   template argument deduction/substitution failed:
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:631:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::UList<T>’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.C:877,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.H:408,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/labelField.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveFields.H:37,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.C:384:24: note: candidate: template<class Type> Foam::tmp<Foam::Field<Type> > Foam::operator/(const Foam::tmp<Foam::Field<Type> >&, const scalar&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:631:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.C:384:24: note:   template argument deduction/substitution failed:
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:631:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::tmp<Foam::Field<Type> >’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarField.H:42:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.H:360,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.H:405,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/labelField.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveFields.H:37,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:166:24: note: candidate: Foam::tmp<Foam::Field<double> > Foam::operator/(const Foam::UList<double>&, const Foam::UList<double>&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarField.H:87:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:166:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::UList<double>&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarField.H:87:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:173:24: note: candidate: Foam::tmp<Foam::Field<double> > Foam::operator/(const Foam::UList<double>&, const Foam::tmp<Foam::Field<double> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarField.H:87:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:173:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::UList<double>&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarField.H:87:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:180:24: note: candidate: Foam::tmp<Foam::Field<double> > Foam::operator/(const Foam::tmp<Foam::Field<double> >&, const Foam::UList<double>&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarField.H:87:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:180:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::tmp<Foam::Field<double> >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarField.H:87:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:187:24: note: candidate: Foam::tmp<Foam::Field<double> > Foam::operator/(const Foam::tmp<Foam::Field<double> >&, const Foam::tmp<Foam::Field<double> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarField.H:87:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:187:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::tmp<Foam::Field<double> >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarField.H:87:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:207:24: note: candidate: Foam::tmp<Foam::Field<double> > Foam::operator/(const scalar&, const Foam::UList<double>&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarField.H:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:207:24: note:   no known conversion for argument 2 from ‘const Foam::Tensor<double>’ to ‘const Foam::UList<double>&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarField.H:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:214:24: note: candidate: Foam::tmp<Foam::Field<double> > Foam::operator/(const scalar&, const Foam::tmp<Foam::Field<double> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarField.H:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:214:24: note:   no known conversion for argument 2 from ‘const Foam::Tensor<double>’ to ‘const Foam::tmp<Foam::Field<double> >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarField.H:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, divide)
 ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/SphericalTensor.H:122:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensor.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/fieldTypes.H:36,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/flipOp.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/mapDistributeBaseTemplates.C:29,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/mapDistributeBase.H:489,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldMapper.H:35,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.C:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.H:408,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/labelField.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveFields.H:37,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/SphericalTensorI.H:147:1: note: candidate: template<class Cmpt> Foam::SphericalTensor<Cmpt> Foam::operator/(Foam::scalar, const Foam::SphericalTensor<Cmpt>&)
 operator/(const scalar s, const SphericalTensor<Cmpt>& st)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/SphericalTensorI.H:147:1: note:   template argument deduction/substitution failed:
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::SphericalTensor<Cmpt>’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Tensor.H:231:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/SymmTensorI.H:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/SymmTensor.H:155,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/symmTensor.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/fieldTypes.H:37,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/flipOp.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/mapDistributeBaseTemplates.C:29,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/mapDistributeBase.H:489,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldMapper.H:35,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.C:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.H:408,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/labelField.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveFields.H:37,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/TensorI.H:491:1: note: candidate: template<class Cmpt> typename Foam::innerProduct<Foam::Vector<Cmpt>, Foam::Tensor<Cmpt> >::type Foam::operator/(const Foam::Vector<Cmpt>&, const Foam::Tensor<Cmpt>&)
 operator/(const Vector<Cmpt>& v, const Tensor<Cmpt>& t)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/TensorI.H:491:1: note:   template argument deduction/substitution failed:
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::Vector<Cmpt>’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorField.H:42:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorField.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveFields.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:166:24: note: candidate: Foam::tmp<Foam::Field<Foam::SphericalTensor<double> > > Foam::operator/(const Foam::UList<double>&, const Foam::UList<Foam::SphericalTensor<double> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorField.H:58:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:166:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::UList<double>&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorField.H:58:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:173:24: note: candidate: Foam::tmp<Foam::Field<Foam::SphericalTensor<double> > > Foam::operator/(const Foam::UList<double>&, const Foam::tmp<Foam::Field<Foam::SphericalTensor<double> > >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorField.H:58:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:173:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::UList<double>&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorField.H:58:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:180:24: note: candidate: Foam::tmp<Foam::Field<Foam::SphericalTensor<double> > > Foam::operator/(const Foam::tmp<Foam::Field<double> >&, const Foam::UList<Foam::SphericalTensor<double> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorField.H:58:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:180:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::tmp<Foam::Field<double> >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorField.H:58:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:187:24: note: candidate: Foam::tmp<Foam::Field<Foam::SphericalTensor<double> > > Foam::operator/(const Foam::tmp<Foam::Field<double> >&, const Foam::tmp<Foam::Field<Foam::SphericalTensor<double> > >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorField.H:58:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:187:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::tmp<Foam::Field<double> >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorField.H:58:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:207:24: note: candidate: Foam::tmp<Foam::Field<Foam::SphericalTensor<double> > > Foam::operator/(const scalar&, const Foam::UList<Foam::SphericalTensor<double> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorField.H:59:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:207:24: note:   no known conversion for argument 2 from ‘const Foam::Tensor<double>’ to ‘const Foam::UList<Foam::SphericalTensor<double> >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorField.H:59:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:214:24: note: candidate: Foam::tmp<Foam::Field<Foam::SphericalTensor<double> > > Foam::operator/(const scalar&, const Foam::tmp<Foam::Field<Foam::SphericalTensor<double> > >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorField.H:59:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:214:24: note:   no known conversion for argument 2 from ‘const Foam::Tensor<double>’ to ‘const Foam::tmp<Foam::Field<Foam::SphericalTensor<double> > >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorField.H:59:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:232:24: note: candidate: Foam::tmp<Foam::Field<Foam::SphericalTensor<double> > > Foam::operator/(const Foam::UList<double>&, const sphericalTensor&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorField.H:59:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:232:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::UList<double>&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorField.H:59:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:239:24: note: candidate: Foam::tmp<Foam::Field<Foam::SphericalTensor<double> > > Foam::operator/(const Foam::tmp<Foam::Field<double> >&, const sphericalTensor&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorField.H:59:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:239:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::tmp<Foam::Field<double> >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorField.H:59:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorField.H:45:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveFields.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:166:24: note: candidate: Foam::tmp<Foam::Field<Foam::Vector<double> > > Foam::operator/(const Foam::UList<Foam::Vector<double> >&, const Foam::UList<Foam::Tensor<double> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorField.H:78:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:166:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::UList<Foam::Vector<double> >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorField.H:78:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:173:24: note: candidate: Foam::tmp<Foam::Field<Foam::Vector<double> > > Foam::operator/(const Foam::UList<Foam::Vector<double> >&, const Foam::tmp<Foam::Field<Foam::Tensor<double> > >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorField.H:78:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:173:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::UList<Foam::Vector<double> >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorField.H:78:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:180:24: note: candidate: Foam::tmp<Foam::Field<Foam::Vector<double> > > Foam::operator/(const Foam::tmp<Foam::Field<Foam::Vector<double> > >&, const Foam::UList<Foam::Tensor<double> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorField.H:78:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:180:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::tmp<Foam::Field<Foam::Vector<double> > >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorField.H:78:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:187:24: note: candidate: Foam::tmp<Foam::Field<Foam::Vector<double> > > Foam::operator/(const Foam::tmp<Foam::Field<Foam::Vector<double> > >&, const Foam::tmp<Foam::Field<Foam::Tensor<double> > >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorField.H:78:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:187:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::tmp<Foam::Field<Foam::Vector<double> > >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorField.H:78:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:207:24: note: candidate: Foam::tmp<Foam::Field<Foam::Vector<double> > > Foam::operator/(const vector&, const Foam::UList<Foam::Tensor<double> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorField.H:79:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:207:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const vector& {aka const Foam::Vector<double>&}’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorField.H:79:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:214:24: note: candidate: Foam::tmp<Foam::Field<Foam::Vector<double> > > Foam::operator/(const vector&, const Foam::tmp<Foam::Field<Foam::Tensor<double> > >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorField.H:79:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:214:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const vector& {aka const Foam::Vector<double>&}’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorField.H:79:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:232:24: note: candidate: Foam::tmp<Foam::Field<Foam::Vector<double> > > Foam::operator/(const Foam::UList<Foam::Vector<double> >&, const tensor&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorField.H:79:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:232:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::UList<Foam::Vector<double> >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorField.H:79:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:239:24: note: candidate: Foam::tmp<Foam::Field<Foam::Vector<double> > > Foam::operator/(const Foam::tmp<Foam::Field<Foam::Vector<double> > >&, const tensor&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorField.H:79:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:239:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::tmp<Foam::Field<Foam::Vector<double> > >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorField.H:79:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, divide)
 ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionedType.H:40:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionedScalar.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/TimeState.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Time.H:47,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dataTemplates.C:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/data.H:117,
                 from lnInclude/fvMesh.H:57,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionSet.H:401:29: note: candidate: Foam::dimensionSet Foam::operator/(const Foam::dimensionSet&, const Foam::dimensionSet&)
         friend dimensionSet operator/
                             ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionSet.H:401:29: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::dimensionSet&’
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Matrix.H:383:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/RectangularMatrix.H:41,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarMatrices.H:43,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionSets.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionSet.H:439,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionedType.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionedScalar.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/TimeState.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Time.H:47,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dataTemplates.C:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/data.H:117,
                 from lnInclude/fvMesh.H:57,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Matrix.C:576:6: note: candidate: template<class Form, class Type> Form Foam::operator/(const Foam::Matrix<Form, Type>&, Foam::scalar)
 Form Foam::operator/(const Matrix<Form, Type>& M, const scalar s)
      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Matrix.C:576:6: note:   template argument deduction/substitution failed:
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::Matrix<Form, Type>’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionedType.H:340:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionedScalar.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/TimeState.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Time.H:47,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dataTemplates.C:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/data.H:117,
                 from lnInclude/fvMesh.H:57,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionedType.C:717:25: note: candidate: template<class Type> Foam::dimensioned<Type> Foam::operator/(const Foam::dimensioned<Type>&, const Foam::dimensioned<double>&)
 Foam::dimensioned<Type> Foam::operator/
                         ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionedType.C:717:25: note:   template argument deduction/substitution failed:
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::dimensioned<Type>’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/TimeState.H:38:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Time.H:47,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dataTemplates.C:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/data.H:117,
                 from lnInclude/fvMesh.H:57,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionedScalar.H:56:19: note: candidate: Foam::dimensionedScalar Foam::operator/(Foam::scalar, const dimensionedScalar&)
 dimensionedScalar operator/(const scalar, const dimensionedScalar&);
                   ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionedScalar.H:56:19: note:   no known conversion for argument 2 from ‘const Foam::Tensor<double>’ to ‘const dimensionedScalar& {aka const Foam::dimensioned<double>&}’
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.H:157,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.H:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:363,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:420:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator/(const Foam::DimensionedField<double, GeoMesh>&, const Foam::DimensionedField<double, GeoMesh>&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:96:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:420:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:96:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::DimensionedField<double, GeoMesh>’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.H:157,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.H:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:363,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:447:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator/(const Foam::DimensionedField<double, GeoMesh>&, const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:96:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:447:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:96:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::DimensionedField<double, GeoMesh>’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.H:157,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.H:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:363,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:473:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >&, const Foam::DimensionedField<double, GeoMesh>&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:96:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:473:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:96:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.H:157,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.H:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:363,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:499:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >&, const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:96:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:499:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:96:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.H:157,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.H:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:363,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:534:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator/(const Foam::dimensioned<double>&, const Foam::DimensionedField<double, GeoMesh>&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:98:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:534:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:98:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::DimensionedField<double, GeoMesh>’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.H:157,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.H:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:363,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:561:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator/(const scalar&, const Foam::DimensionedField<double, GeoMesh>&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:98:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:561:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:98:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::DimensionedField<double, GeoMesh>’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.H:157,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.H:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:363,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:572:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator/(const Foam::dimensioned<double>&, const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:98:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:572:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:98:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.H:157,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.H:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:363,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:598:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator/(const scalar&, const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:98:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:598:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:98:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.C:532,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:366,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:420:44: note: candidate: template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::operator/(const Foam::DimensionedField<Type, GeoMesh>&, const Foam::DimensionedField<double, GeoMesh>&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:357:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:420:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:357:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.C:532,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:366,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:447:44: note: candidate: template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::operator/(const Foam::DimensionedField<Type, GeoMesh>&, const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:357:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:447:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:357:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.C:532,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:366,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:473:44: note: candidate: template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&, const Foam::DimensionedField<double, GeoMesh>&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:357:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:473:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:357:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.C:532,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:366,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:499:44: note: candidate: template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&, const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:357:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:499:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:357:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.C:532,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:366,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:611:44: note: candidate: template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::operator/(const Foam::DimensionedField<Type, GeoMesh>&, const Foam::dimensioned<double>&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:362:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:611:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:362:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.C:532,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:366,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:638:44: note: candidate: template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::operator/(const Foam::DimensionedField<Type, GeoMesh>&, const scalar&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:362:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:638:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:362:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.C:532,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:366,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:649:44: note: candidate: template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&, const Foam::dimensioned<double>&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:362:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:649:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:362:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.C:532,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:366,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:675:44: note: candidate: template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&, const scalar&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:362:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:675:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:362:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.C:32:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.H:158,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.H:195,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:323:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, double> > Foam::operator/(const Foam::FieldField<Field, double>&, const Foam::FieldField<Field, double>&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.C:89:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:323:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.C:89:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::FieldField<Field, double>’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.C:32:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.H:158,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.H:195,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:338:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, double> > Foam::operator/(const Foam::FieldField<Field, double>&, const Foam::tmp<Foam::FieldField<Field, double> >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.C:89:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:338:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.C:89:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::FieldField<Field, double>’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.C:32:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.H:158,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.H:195,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:354:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, double> > Foam::operator/(const Foam::tmp<Foam::FieldField<Field, double> >&, const Foam::FieldField<Field, double>&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.C:89:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:354:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.C:89:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::tmp<Foam::FieldField<Field, double> >’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.C:32:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.H:158,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.H:195,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:370:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, double> > Foam::operator/(const Foam::tmp<Foam::FieldField<Field, double> >&, const Foam::tmp<Foam::FieldField<Field, double> >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.C:89:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:370:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.C:89:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::tmp<Foam::FieldField<Field, double> >’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.C:32:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.H:158,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.H:195,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:407:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, double> > Foam::operator/(const scalar&, const Foam::FieldField<Field, double>&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.C:91:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:407:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.C:91:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::FieldField<Field, double>’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.C:32:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.H:158,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.H:195,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:422:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, double> > Foam::operator/(const scalar&, const Foam::tmp<Foam::FieldField<Field, double> >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.C:91:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:422:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.C:91:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::tmp<Foam::FieldField<Field, double> >’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.C:390,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.H:198,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:323:36: note: candidate: template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::operator/(const Foam::FieldField<Field, Type>&, const Foam::FieldField<Field, double>&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:614:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:323:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:614:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::FieldField<Field, Type>’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.C:390,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.H:198,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:338:36: note: candidate: template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::operator/(const Foam::FieldField<Field, Type>&, const Foam::tmp<Foam::FieldField<Field, double> >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:614:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:338:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:614:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::FieldField<Field, Type>’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.C:390,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.H:198,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:354:36: note: candidate: template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::operator/(const Foam::tmp<Foam::FieldField<Field, Type> >&, const Foam::FieldField<Field, double>&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:614:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:354:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:614:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::tmp<Foam::FieldField<Field, Type> >’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.C:390,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.H:198,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:370:36: note: candidate: template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::operator/(const Foam::tmp<Foam::FieldField<Field, Type> >&, const Foam::tmp<Foam::FieldField<Field, double> >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:614:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:370:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:614:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::tmp<Foam::FieldField<Field, Type> >’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.C:390,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.H:198,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:455:36: note: candidate: template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::operator/(const Foam::FieldField<Field, Type>&, const scalar&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:619:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:455:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:619:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::FieldField<Field, Type>’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.C:390,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.H:198,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:470:36: note: candidate: template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::operator/(const Foam::tmp<Foam::FieldField<Field, Type> >&, const scalar&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:619:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:470:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:619:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::tmp<Foam::FieldField<Field, Type> >’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DiagTensor.H:115:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensor.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/coupledPolyPatch.H:41,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/processorPolyPatch.H:42,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/processorTopology.H:30,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/globalMeshData.H:84,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricBoundaryField.C:28,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.C:1352,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DiagTensorI.H:263:1: note: candidate: template<class Cmpt> Foam::DiagTensor<Cmpt> Foam::operator/(Foam::scalar, const Foam::DiagTensor<Cmpt>&)
 operator/(const scalar s, const DiagTensor<Cmpt>& dt)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DiagTensorI.H:263:1: note:   template argument deduction/substitution failed:
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::DiagTensor<Cmpt>’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DiagTensor.H:115:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensor.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/coupledPolyPatch.H:41,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/processorPolyPatch.H:42,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/processorTopology.H:30,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/globalMeshData.H:84,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricBoundaryField.C:28,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.C:1352,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DiagTensorI.H:272:1: note: candidate: template<class Cmpt> Foam::Vector<Cmpt> Foam::operator/(Foam::Vector<Cmpt>, const Foam::DiagTensor<Cmpt>&)
 operator/(const Vector<Cmpt> v, const DiagTensor<Cmpt>& dt)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DiagTensorI.H:272:1: note:   template argument deduction/substitution failed:
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘Foam::Vector<Cmpt>’ and ‘double’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:42:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/coupledPolyPatch.H:41,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/processorPolyPatch.H:42,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/processorTopology.H:30,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/globalMeshData.H:84,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricBoundaryField.C:28,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.C:1352,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:166:24: note: candidate: Foam::tmp<Foam::Field<Foam::Vector<double> > > Foam::operator/(const Foam::UList<Foam::Vector<double> >&, const Foam::UList<Foam::DiagTensor<double> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:66:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, diagTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:166:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::UList<Foam::Vector<double> >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:66:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, diagTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:173:24: note: candidate: Foam::tmp<Foam::Field<Foam::Vector<double> > > Foam::operator/(const Foam::UList<Foam::Vector<double> >&, const Foam::tmp<Foam::Field<Foam::DiagTensor<double> > >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:66:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, diagTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:173:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::UList<Foam::Vector<double> >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:66:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, diagTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:180:24: note: candidate: Foam::tmp<Foam::Field<Foam::Vector<double> > > Foam::operator/(const Foam::tmp<Foam::Field<Foam::Vector<double> > >&, const Foam::UList<Foam::DiagTensor<double> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:66:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, diagTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:180:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::tmp<Foam::Field<Foam::Vector<double> > >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:66:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, diagTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:187:24: note: candidate: Foam::tmp<Foam::Field<Foam::Vector<double> > > Foam::operator/(const Foam::tmp<Foam::Field<Foam::Vector<double> > >&, const Foam::tmp<Foam::Field<Foam::DiagTensor<double> > >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:66:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, diagTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:187:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::tmp<Foam::Field<Foam::Vector<double> > >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:66:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, diagTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:207:24: note: candidate: Foam::tmp<Foam::Field<Foam::Vector<double> > > Foam::operator/(const vector&, const Foam::UList<Foam::DiagTensor<double> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:67:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, diagTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:207:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const vector& {aka const Foam::Vector<double>&}’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:67:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, diagTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:214:24: note: candidate: Foam::tmp<Foam::Field<Foam::Vector<double> > > Foam::operator/(const vector&, const Foam::tmp<Foam::Field<Foam::DiagTensor<double> > >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:67:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, diagTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:214:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const vector& {aka const Foam::Vector<double>&}’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:67:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, diagTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:232:24: note: candidate: Foam::tmp<Foam::Field<Foam::Vector<double> > > Foam::operator/(const Foam::UList<Foam::Vector<double> >&, const diagTensor&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:67:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, diagTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:232:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::UList<Foam::Vector<double> >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:67:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, diagTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:239:24: note: candidate: Foam::tmp<Foam::Field<Foam::Vector<double> > > Foam::operator/(const Foam::tmp<Foam::Field<Foam::Vector<double> > >&, const diagTensor&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:67:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, diagTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:239:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::tmp<Foam::Field<Foam::Vector<double> > >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:67:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, diagTensor, /, divide)
 ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/quaternion.H:304:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/transformField.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/vectorTensorTransform.H:45,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/mapDistribute.H:138,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/globalMeshDataTemplates.C:28,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/globalMeshData.H:627,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricBoundaryField.C:28,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.C:1352,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/quaternionI.H:675:25: note: candidate: Foam::quaternion Foam::operator/(const Foam::quaternion&, const Foam::quaternion&)
 inline Foam::quaternion Foam::operator/
                         ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/quaternionI.H:675:25: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::quaternion&’
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/quaternionI.H:697:25: note: candidate: Foam::quaternion Foam::operator/(const Foam::quaternion&, Foam::scalar)
 inline Foam::quaternion Foam::operator/(const quaternion& q, const scalar s)
                         ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/quaternionI.H:697:25: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::quaternion&’
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/septernion.H:206:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/transformField.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/vectorTensorTransform.H:45,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/mapDistribute.H:138,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/globalMeshDataTemplates.C:28,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/globalMeshData.H:627,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricBoundaryField.C:28,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.C:1352,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/septernionI.H:230:25: note: candidate: Foam::septernion Foam::operator/(const Foam::septernion&, const Foam::quaternion&)
 inline Foam::septernion Foam::operator/
                         ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/septernionI.H:230:25: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::septernion&’
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/septernionI.H:254:25: note: candidate: Foam::septernion Foam::operator/(const Foam::septernion&, const Foam::septernion&)
 inline Foam::septernion Foam::operator/
                         ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/septernionI.H:254:25: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::septernion&’
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/septernionI.H:276:25: note: candidate: Foam::septernion Foam::operator/(const Foam::septernion&, Foam::scalar)
 inline Foam::septernion Foam::operator/(const septernion& tr, const scalar s)
                         ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/septernionI.H:276:25: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::septernion&’
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.C:1353,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:517:54: note: candidate: template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::operator/(const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::GeometricField<double, PatchField, GeoMesh>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:580:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:517:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:580:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.C:1353,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:546:54: note: candidate: template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::operator/(const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:580:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:546:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:580:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.C:1353,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:572:54: note: candidate: template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&, const Foam::GeometricField<double, PatchField, GeoMesh>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:580:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:572:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:580:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.C:1353,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:598:54: note: candidate: template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&, const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:580:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:598:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:580:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.C:1353,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:736:54: note: candidate: template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::operator/(const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::dimensioned<double>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:585:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:736:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:585:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.C:1353,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:765:54: note: candidate: template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::operator/(const Foam::GeometricField<Type, PatchField, GeoMesh>&, const scalar&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:585:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:765:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:585:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.C:1353,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:776:54: note: candidate: template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&, const Foam::dimensioned<double>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:585:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:776:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:585:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.C:1353,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:802:54: note: candidate: template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&, const scalar&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:585:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:802:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:585:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:173,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:517:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator/(const Foam::GeometricField<double, PatchField, GeoMesh>&, const Foam::GeometricField<double, PatchField, GeoMesh>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:114:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:517:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:114:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::GeometricField<double, PatchField, GeoMesh>’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:173,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:546:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator/(const Foam::GeometricField<double, PatchField, GeoMesh>&, const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:114:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:546:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:114:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::GeometricField<double, PatchField, GeoMesh>’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:173,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:572:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >&, const Foam::GeometricField<double, PatchField, GeoMesh>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:114:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:572:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:114:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:173,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:598:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >&, const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:114:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:598:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:114:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:173,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:645:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator/(const Foam::dimensioned<double>&, const Foam::GeometricField<double, PatchField, GeoMesh>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:116:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:645:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:116:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::GeometricField<double, PatchField, GeoMesh>’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:173,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:674:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator/(const scalar&, const Foam::GeometricField<double, PatchField, GeoMesh>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:116:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:674:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:116:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::GeometricField<double, PatchField, GeoMesh>’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:173,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:685:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator/(const Foam::dimensioned<double>&, const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:116:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:685:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:116:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:173,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:711:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator/(const scalar&, const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:116:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:711:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:116:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.H:69,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:517:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::GeometricField<double, PatchField, GeoMesh>&, const Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:43:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:517:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:43:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::GeometricField<double, PatchField, GeoMesh>’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.H:69,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:546:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::GeometricField<double, PatchField, GeoMesh>&, const Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:43:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:546:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:43:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::GeometricField<double, PatchField, GeoMesh>’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.H:69,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:572:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >&, const Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:43:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:572:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:43:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.H:69,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:598:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >&, const Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:43:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:598:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:43:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.H:69,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:645:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::dimensioned<double>&, const Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:645:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh>’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.H:69,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:674:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> > Foam::operator/(const scalar&, const Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:674:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh>’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.H:69,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:685:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::dimensioned<double>&, const Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:685:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> >’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.H:69,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:711:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> > Foam::operator/(const scalar&, const Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:711:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> >’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.H:69,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:736:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::GeometricField<double, PatchField, GeoMesh>&, const Foam::dimensioned<Foam::SphericalTensor<double> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:736:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::GeometricField<double, PatchField, GeoMesh>’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.H:69,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:765:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::GeometricField<double, PatchField, GeoMesh>&, const sphericalTensor&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:765:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::GeometricField<double, PatchField, GeoMesh>’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.H:69,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:776:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >&, const Foam::dimensioned<Foam::SphericalTensor<double> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:776:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.H:69,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:802:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >&, const sphericalTensor&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:802:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.H:69,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedTensorField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:420:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> > Foam::operator/(const Foam::DimensionedField<double, GeoMesh>&, const Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh>&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:43:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:420:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:43:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::DimensionedField<double, GeoMesh>’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.H:69,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedTensorField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:447:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> > Foam::operator/(const Foam::DimensionedField<double, GeoMesh>&, const Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> >&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:43:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:447:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:43:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::DimensionedField<double, GeoMesh>’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.H:69,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedTensorField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:473:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >&, const Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh>&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:43:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:473:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:43:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.H:69,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedTensorField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:499:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >&, const Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> >&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:43:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:499:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:43:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.H:69,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedTensorField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:534:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> > Foam::operator/(const Foam::dimensioned<double>&, const Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh>&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:685:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:534:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:685:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh>’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.H:69,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedTensorField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:561:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> > Foam::operator/(const scalar&, const Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh>&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:685:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:561:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:685:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh>’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.H:69,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedTensorField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:572:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> > Foam::operator/(const Foam::dimensioned<double>&, const Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> >&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:685:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:572:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:685:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> >’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.H:69,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedTensorField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:598:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> > Foam::operator/(const scalar&, const Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> >&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:685:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:598:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:685:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> >’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.H:69,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedTensorField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:611:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> > Foam::operator/(const Foam::DimensionedField<double, GeoMesh>&, const Foam::dimensioned<Foam::SphericalTensor<double> >&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:686:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:611:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:686:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::DimensionedField<double, GeoMesh>’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.H:69,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedTensorField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:638:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> > Foam::operator/(const Foam::DimensionedField<double, GeoMesh>&, const sphericalTensor&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:686:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:638:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:686:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::DimensionedField<double, GeoMesh>’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.H:69,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedTensorField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:649:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >&, const Foam::dimensioned<Foam::SphericalTensor<double> >&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:686:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:649:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:686:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.H:69,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedTensorField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:675:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >&, const sphericalTensor&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:686:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:675:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:686:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:517:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh>&, const Foam::GeometricField<Foam::Tensor<double>, PatchField, GeoMesh>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:62:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:517:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:62:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh>’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:546:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh>&, const Foam::tmp<Foam::GeometricField<Foam::Tensor<double>, PatchField, GeoMesh> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:62:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:546:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:62:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh>’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:572:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> >&, const Foam::GeometricField<Foam::Tensor<double>, PatchField, GeoMesh>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:62:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:572:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:62:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> >’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:598:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> >&, const Foam::tmp<Foam::GeometricField<Foam::Tensor<double>, PatchField, GeoMesh> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:62:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:598:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:62:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> >’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:645:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::dimensioned<Foam::Vector<double> >&, const Foam::GeometricField<Foam::Tensor<double>, PatchField, GeoMesh>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:63:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:645:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:63:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:56: note:   cannot convert ‘((Foam::Gebart*)this)->Foam::Gebart::vfmax_’ (type ‘Foam::scalar {aka double}’) to type ‘const Foam::dimensioned<Foam::Vector<double> >&’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                        ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:674:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> > Foam::operator/(const vector&, const Foam::GeometricField<Foam::Tensor<double>, PatchField, GeoMesh>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:63:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:674:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:63:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:56: note:   cannot convert ‘((Foam::Gebart*)this)->Foam::Gebart::vfmax_’ (type ‘Foam::scalar {aka double}’) to type ‘const vector& {aka const Foam::Vector<double>&}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                        ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:685:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::dimensioned<Foam::Vector<double> >&, const Foam::tmp<Foam::GeometricField<Foam::Tensor<double>, PatchField, GeoMesh> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:63:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:685:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:63:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:56: note:   cannot convert ‘((Foam::Gebart*)this)->Foam::Gebart::vfmax_’ (type ‘Foam::scalar {aka double}’) to type ‘const Foam::dimensioned<Foam::Vector<double> >&’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                        ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:711:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> > Foam::operator/(const vector&, const Foam::tmp<Foam::GeometricField<Foam::Tensor<double>, PatchField, GeoMesh> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:63:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:711:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:63:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:56: note:   cannot convert ‘((Foam::Gebart*)this)->Foam::Gebart::vfmax_’ (type ‘Foam::scalar {aka double}’) to type ‘const vector& {aka const Foam::Vector<double>&}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                        ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:736:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh>&, const Foam::dimensioned<Foam::Tensor<double> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:63:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:736:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:63:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh>’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:765:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh>&, const tensor&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:63:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:765:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:63:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh>’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:776:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> >&, const Foam::dimensioned<Foam::Tensor<double> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:63:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:776:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:63:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> >’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:802:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> >&, const tensor&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:63:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:802:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:63:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> >’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:32:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.H:72,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:323:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, Foam::SphericalTensor<double> > > Foam::operator/(const Foam::FieldField<Field, double>&, const Foam::FieldField<Field, Foam::SphericalTensor<double> >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:49:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:323:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:49:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::FieldField<Field, double>’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:32:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.H:72,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:338:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, Foam::SphericalTensor<double> > > Foam::operator/(const Foam::FieldField<Field, double>&, const Foam::tmp<Foam::FieldField<Field, Foam::SphericalTensor<double> > >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:49:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:338:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:49:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::FieldField<Field, double>’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:32:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.H:72,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:354:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, Foam::SphericalTensor<double> > > Foam::operator/(const Foam::tmp<Foam::FieldField<Field, double> >&, const Foam::FieldField<Field, Foam::SphericalTensor<double> >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:49:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:354:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:49:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::tmp<Foam::FieldField<Field, double> >’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:32:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.H:72,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:370:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, Foam::SphericalTensor<double> > > Foam::operator/(const Foam::tmp<Foam::FieldField<Field, double> >&, const Foam::tmp<Foam::FieldField<Field, Foam::SphericalTensor<double> > >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:49:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:370:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:49:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::tmp<Foam::FieldField<Field, double> >’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:32:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.H:72,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:407:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, Foam::SphericalTensor<double> > > Foam::operator/(const scalar&, const Foam::FieldField<Field, Foam::SphericalTensor<double> >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:487:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:50:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:407:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:487:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:50:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::FieldField<Field, Foam::SphericalTensor<double> >’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:32:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.H:72,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:422:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, Foam::SphericalTensor<double> > > Foam::operator/(const scalar&, const Foam::tmp<Foam::FieldField<Field, Foam::SphericalTensor<double> > >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:487:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:50:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:422:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:487:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:50:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::tmp<Foam::FieldField<Field, Foam::SphericalTensor<double> > >’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:32:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.H:72,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:455:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, Foam::SphericalTensor<double> > > Foam::operator/(const Foam::FieldField<Field, double>&, const sphericalTensor&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:488:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:50:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:455:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:488:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:50:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::FieldField<Field, double>’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:32:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.H:72,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:470:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, Foam::SphericalTensor<double> > > Foam::operator/(const Foam::tmp<Foam::FieldField<Field, double> >&, const sphericalTensor&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:488:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:50:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:470:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:488:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:50:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::tmp<Foam::FieldField<Field, double> >’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.C:32:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.H:86,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:323:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, Foam::Vector<double> > > Foam::operator/(const Foam::FieldField<Field, Foam::Vector<double> >&, const Foam::FieldField<Field, Foam::Tensor<double> >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.C:63:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:323:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.C:63:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::FieldField<Field, Foam::Vector<double> >’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.C:32:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.H:86,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:338:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, Foam::Vector<double> > > Foam::operator/(const Foam::FieldField<Field, Foam::Vector<double> >&, const Foam::tmp<Foam::FieldField<Field, Foam::Tensor<double> > >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.C:63:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:338:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.C:63:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::FieldField<Field, Foam::Vector<double> >’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.C:32:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.H:86,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:354:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, Foam::Vector<double> > > Foam::operator/(const Foam::tmp<Foam::FieldField<Field, Foam::Vector<double> > >&, const Foam::FieldField<Field, Foam::Tensor<double> >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.C:63:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:354:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.C:63:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::tmp<Foam::FieldField<Field, Foam::Vector<double> > >’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.C:32:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.H:86,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:370:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, Foam::Vector<double> > > Foam::operator/(const Foam::tmp<Foam::FieldField<Field, Foam::Vector<double> > >&, const Foam::tmp<Foam::FieldField<Field, Foam::Tensor<double> > >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.C:63:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:370:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.C:63:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::tmp<Foam::FieldField<Field, Foam::Vector<double> > >’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.C:32:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.H:86,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:407:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, Foam::Vector<double> > > Foam::operator/(const vector&, const Foam::FieldField<Field, Foam::Tensor<double> >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:487:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.C:64:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:407:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:487:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.C:64:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:56: note:   cannot convert ‘((Foam::Gebart*)this)->Foam::Gebart::vfmax_’ (type ‘Foam::scalar {aka double}’) to type ‘const vector& {aka const Foam::Vector<double>&}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                        ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.C:32:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.H:86,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:422:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, Foam::Vector<double> > > Foam::operator/(const vector&, const Foam::tmp<Foam::FieldField<Field, Foam::Tensor<double> > >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:487:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.C:64:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:422:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:487:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.C:64:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:56: note:   cannot convert ‘((Foam::Gebart*)this)->Foam::Gebart::vfmax_’ (type ‘Foam::scalar {aka double}’) to type ‘const vector& {aka const Foam::Vector<double>&}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                        ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.C:32:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.H:86,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:455:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, Foam::Vector<double> > > Foam::operator/(const Foam::FieldField<Field, Foam::Vector<double> >&, const tensor&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:488:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.C:64:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:455:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:488:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.C:64:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::FieldField<Field, Foam::Vector<double> >’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.C:32:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.H:86,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:470:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, Foam::Vector<double> > > Foam::operator/(const Foam::tmp<Foam::FieldField<Field, Foam::Vector<double> > >&, const tensor&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:488:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.C:64:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:470:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:488:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.C:64:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:175:69: note:   mismatched types ‘const Foam::tmp<Foam::FieldField<Field, Foam::Vector<double> > >’ and ‘Foam::scalar {aka double}’
         R_[j].yy() = scalar(1) / (constB1 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));
                                                                     ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:62: error: no match for ‘operator/’ (operand types are ‘Foam::scalar {aka double}’ and ‘const Foam::Tensor<double>’)
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                              ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/IOstream.H:50:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Ostream.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/OSstream.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/messageStream.H:217,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/error.H:51,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/HashTableI.H:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/HashTable.H:560,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/objectRegistry.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:44,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/fileName.H:243:10: note: candidate: Foam::fileName Foam::operator/(const Foam::string&, const Foam::string&)
 fileName operator/(const string&, const string&);
          ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/fileName.H:243:10: note:   no known conversion for argument 2 from ‘const Foam::Tensor<double>’ to ‘const Foam::string&’
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/zero.H:107:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/UList.H:49,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/List.H:43,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/HashTable.C:30,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/HashTable.H:566,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/objectRegistry.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:44,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/zeroI.H:88:13: note: candidate: template<class Type> Foam::zero Foam::operator/(const Foam::zero&, const Type&)
 inline zero operator/(const zero&, const Type& t)
             ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/zeroI.H:88:13: note:   template argument deduction/substitution failed:
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:56: note:   cannot convert ‘((Foam::Gebart*)this)->Foam::Gebart::vfmax_’ (type ‘Foam::scalar {aka double}’) to type ‘const Foam::zero&’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                        ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/VectorSpace.H:226:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Vector.H:44,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/vector.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/point.H:35,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/pointField.H:35,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/VectorSpaceI.H:713:13: note: candidate: template<class Form, class Cmpt, unsigned char Ncmpts> Form Foam::operator/(const Foam::VectorSpace<Form, Cmpt, Ncmpts>&, Foam::scalar)
 inline Form operator/
             ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/VectorSpaceI.H:713:13: note:   template argument deduction/substitution failed:
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::VectorSpace<Form, Cmpt, Ncmpts>’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.C:877,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.H:408,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/labelField.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveFields.H:37,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.C:264:24: note: candidate: template<class Type> Foam::tmp<Foam::Field<Type> > Foam::operator/(const Foam::UList<T>&, const Foam::UList<double>&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:626:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.C:264:24: note:   template argument deduction/substitution failed:
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:626:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::UList<T>’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.C:877,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.H:408,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/labelField.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveFields.H:37,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.C:276:24: note: candidate: template<class Type> Foam::tmp<Foam::Field<Type> > Foam::operator/(const Foam::UList<T>&, const Foam::tmp<Foam::Field<double> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:626:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.C:276:24: note:   template argument deduction/substitution failed:
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:626:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::UList<T>’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.C:877,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.H:408,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/labelField.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveFields.H:37,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.C:289:24: note: candidate: template<class Type> Foam::tmp<Foam::Field<Type> > Foam::operator/(const Foam::tmp<Foam::Field<Type> >&, const Foam::UList<double>&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:626:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.C:289:24: note:   template argument deduction/substitution failed:
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:626:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::tmp<Foam::Field<Type> >’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.C:877,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.H:408,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/labelField.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveFields.H:37,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.C:302:24: note: candidate: template<class Type> Foam::tmp<Foam::Field<Type> > Foam::operator/(const Foam::tmp<Foam::Field<Type> >&, const Foam::tmp<Foam::Field<double> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:626:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.C:302:24: note:   template argument deduction/substitution failed:
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:626:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::tmp<Foam::Field<Type> >’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.C:877,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.H:408,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/labelField.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveFields.H:37,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.C:372:24: note: candidate: template<class Type> Foam::tmp<Foam::Field<Type> > Foam::operator/(const Foam::UList<T>&, const scalar&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:631:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.C:372:24: note:   template argument deduction/substitution failed:
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:631:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::UList<T>’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.C:877,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.H:408,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/labelField.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveFields.H:37,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.C:384:24: note: candidate: template<class Type> Foam::tmp<Foam::Field<Type> > Foam::operator/(const Foam::tmp<Foam::Field<Type> >&, const scalar&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:631:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.C:384:24: note:   template argument deduction/substitution failed:
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.C:631:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::tmp<Foam::Field<Type> >’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarField.H:42:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctions.H:360,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.H:405,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/labelField.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveFields.H:37,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:166:24: note: candidate: Foam::tmp<Foam::Field<double> > Foam::operator/(const Foam::UList<double>&, const Foam::UList<double>&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarField.H:87:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:166:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::UList<double>&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarField.H:87:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:173:24: note: candidate: Foam::tmp<Foam::Field<double> > Foam::operator/(const Foam::UList<double>&, const Foam::tmp<Foam::Field<double> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarField.H:87:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:173:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::UList<double>&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarField.H:87:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:180:24: note: candidate: Foam::tmp<Foam::Field<double> > Foam::operator/(const Foam::tmp<Foam::Field<double> >&, const Foam::UList<double>&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarField.H:87:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:180:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::tmp<Foam::Field<double> >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarField.H:87:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:187:24: note: candidate: Foam::tmp<Foam::Field<double> > Foam::operator/(const Foam::tmp<Foam::Field<double> >&, const Foam::tmp<Foam::Field<double> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarField.H:87:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:187:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::tmp<Foam::Field<double> >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarField.H:87:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:207:24: note: candidate: Foam::tmp<Foam::Field<double> > Foam::operator/(const scalar&, const Foam::UList<double>&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarField.H:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:207:24: note:   no known conversion for argument 2 from ‘const Foam::Tensor<double>’ to ‘const Foam::UList<double>&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarField.H:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:214:24: note: candidate: Foam::tmp<Foam::Field<double> > Foam::operator/(const scalar&, const Foam::tmp<Foam::Field<double> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarField.H:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:214:24: note:   no known conversion for argument 2 from ‘const Foam::Tensor<double>’ to ‘const Foam::tmp<Foam::Field<double> >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarField.H:89:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, divide)
 ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/SphericalTensor.H:122:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensor.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/fieldTypes.H:36,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/flipOp.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/mapDistributeBaseTemplates.C:29,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/mapDistributeBase.H:489,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldMapper.H:35,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.C:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.H:408,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/labelField.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveFields.H:37,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/SphericalTensorI.H:147:1: note: candidate: template<class Cmpt> Foam::SphericalTensor<Cmpt> Foam::operator/(Foam::scalar, const Foam::SphericalTensor<Cmpt>&)
 operator/(const scalar s, const SphericalTensor<Cmpt>& st)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/SphericalTensorI.H:147:1: note:   template argument deduction/substitution failed:
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::SphericalTensor<Cmpt>’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Tensor.H:231:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/SymmTensorI.H:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/SymmTensor.H:155,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/symmTensor.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/fieldTypes.H:37,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/flipOp.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/mapDistributeBaseTemplates.C:29,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/mapDistributeBase.H:489,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldMapper.H:35,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.C:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Field.H:408,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/labelField.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveFields.H:37,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/TensorI.H:491:1: note: candidate: template<class Cmpt> typename Foam::innerProduct<Foam::Vector<Cmpt>, Foam::Tensor<Cmpt> >::type Foam::operator/(const Foam::Vector<Cmpt>&, const Foam::Tensor<Cmpt>&)
 operator/(const Vector<Cmpt>& v, const Tensor<Cmpt>& t)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/TensorI.H:491:1: note:   template argument deduction/substitution failed:
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::Vector<Cmpt>’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorField.H:42:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorField.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveFields.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:166:24: note: candidate: Foam::tmp<Foam::Field<Foam::SphericalTensor<double> > > Foam::operator/(const Foam::UList<double>&, const Foam::UList<Foam::SphericalTensor<double> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorField.H:58:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:166:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::UList<double>&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorField.H:58:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:173:24: note: candidate: Foam::tmp<Foam::Field<Foam::SphericalTensor<double> > > Foam::operator/(const Foam::UList<double>&, const Foam::tmp<Foam::Field<Foam::SphericalTensor<double> > >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorField.H:58:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:173:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::UList<double>&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorField.H:58:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:180:24: note: candidate: Foam::tmp<Foam::Field<Foam::SphericalTensor<double> > > Foam::operator/(const Foam::tmp<Foam::Field<double> >&, const Foam::UList<Foam::SphericalTensor<double> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorField.H:58:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:180:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::tmp<Foam::Field<double> >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorField.H:58:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:187:24: note: candidate: Foam::tmp<Foam::Field<Foam::SphericalTensor<double> > > Foam::operator/(const Foam::tmp<Foam::Field<double> >&, const Foam::tmp<Foam::Field<Foam::SphericalTensor<double> > >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorField.H:58:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:187:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::tmp<Foam::Field<double> >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorField.H:58:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:207:24: note: candidate: Foam::tmp<Foam::Field<Foam::SphericalTensor<double> > > Foam::operator/(const scalar&, const Foam::UList<Foam::SphericalTensor<double> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorField.H:59:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:207:24: note:   no known conversion for argument 2 from ‘const Foam::Tensor<double>’ to ‘const Foam::UList<Foam::SphericalTensor<double> >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorField.H:59:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:214:24: note: candidate: Foam::tmp<Foam::Field<Foam::SphericalTensor<double> > > Foam::operator/(const scalar&, const Foam::tmp<Foam::Field<Foam::SphericalTensor<double> > >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorField.H:59:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:214:24: note:   no known conversion for argument 2 from ‘const Foam::Tensor<double>’ to ‘const Foam::tmp<Foam::Field<Foam::SphericalTensor<double> > >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorField.H:59:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:232:24: note: candidate: Foam::tmp<Foam::Field<Foam::SphericalTensor<double> > > Foam::operator/(const Foam::UList<double>&, const sphericalTensor&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorField.H:59:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:232:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::UList<double>&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorField.H:59:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:239:24: note: candidate: Foam::tmp<Foam::Field<Foam::SphericalTensor<double> > > Foam::operator/(const Foam::tmp<Foam::Field<double> >&, const sphericalTensor&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorField.H:59:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:239:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::tmp<Foam::Field<double> >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorField.H:59:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorField.H:45:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveFields.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/pointField.H:36,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edge.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/edgeList.H:32,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/primitiveMesh.H:54,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:45,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:166:24: note: candidate: Foam::tmp<Foam::Field<Foam::Vector<double> > > Foam::operator/(const Foam::UList<Foam::Vector<double> >&, const Foam::UList<Foam::Tensor<double> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorField.H:78:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:166:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::UList<Foam::Vector<double> >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorField.H:78:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:173:24: note: candidate: Foam::tmp<Foam::Field<Foam::Vector<double> > > Foam::operator/(const Foam::UList<Foam::Vector<double> >&, const Foam::tmp<Foam::Field<Foam::Tensor<double> > >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorField.H:78:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:173:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::UList<Foam::Vector<double> >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorField.H:78:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:180:24: note: candidate: Foam::tmp<Foam::Field<Foam::Vector<double> > > Foam::operator/(const Foam::tmp<Foam::Field<Foam::Vector<double> > >&, const Foam::UList<Foam::Tensor<double> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorField.H:78:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:180:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::tmp<Foam::Field<Foam::Vector<double> > >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorField.H:78:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:187:24: note: candidate: Foam::tmp<Foam::Field<Foam::Vector<double> > > Foam::operator/(const Foam::tmp<Foam::Field<Foam::Vector<double> > >&, const Foam::tmp<Foam::Field<Foam::Tensor<double> > >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorField.H:78:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:187:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::tmp<Foam::Field<Foam::Vector<double> > >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorField.H:78:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:207:24: note: candidate: Foam::tmp<Foam::Field<Foam::Vector<double> > > Foam::operator/(const vector&, const Foam::UList<Foam::Tensor<double> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorField.H:79:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:207:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const vector& {aka const Foam::Vector<double>&}’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorField.H:79:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:214:24: note: candidate: Foam::tmp<Foam::Field<Foam::Vector<double> > > Foam::operator/(const vector&, const Foam::tmp<Foam::Field<Foam::Tensor<double> > >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorField.H:79:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:214:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const vector& {aka const Foam::Vector<double>&}’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorField.H:79:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:232:24: note: candidate: Foam::tmp<Foam::Field<Foam::Vector<double> > > Foam::operator/(const Foam::UList<Foam::Vector<double> >&, const tensor&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorField.H:79:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:232:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::UList<Foam::Vector<double> >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorField.H:79:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:239:24: note: candidate: Foam::tmp<Foam::Field<Foam::Vector<double> > > Foam::operator/(const Foam::tmp<Foam::Field<Foam::Vector<double> > >&, const tensor&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorField.H:79:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:239:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::tmp<Foam::Field<Foam::Vector<double> > >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorField.H:79:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, divide)
 ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionedType.H:40:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionedScalar.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/TimeState.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Time.H:47,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dataTemplates.C:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/data.H:117,
                 from lnInclude/fvMesh.H:57,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionSet.H:401:29: note: candidate: Foam::dimensionSet Foam::operator/(const Foam::dimensionSet&, const Foam::dimensionSet&)
         friend dimensionSet operator/
                             ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionSet.H:401:29: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::dimensionSet&’
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Matrix.H:383:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/RectangularMatrix.H:41,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarMatrices.H:43,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionSets.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionSet.H:439,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionedType.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionedScalar.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/TimeState.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Time.H:47,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dataTemplates.C:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/data.H:117,
                 from lnInclude/fvMesh.H:57,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Matrix.C:576:6: note: candidate: template<class Form, class Type> Form Foam::operator/(const Foam::Matrix<Form, Type>&, Foam::scalar)
 Form Foam::operator/(const Matrix<Form, Type>& M, const scalar s)
      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Matrix.C:576:6: note:   template argument deduction/substitution failed:
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::Matrix<Form, Type>’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionedType.H:340:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionedScalar.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/TimeState.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Time.H:47,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dataTemplates.C:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/data.H:117,
                 from lnInclude/fvMesh.H:57,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionedType.C:717:25: note: candidate: template<class Type> Foam::dimensioned<Type> Foam::operator/(const Foam::dimensioned<Type>&, const Foam::dimensioned<double>&)
 Foam::dimensioned<Type> Foam::operator/
                         ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionedType.C:717:25: note:   template argument deduction/substitution failed:
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::dimensioned<Type>’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/TimeState.H:38:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/Time.H:47,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dataTemplates.C:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/data.H:117,
                 from lnInclude/fvMesh.H:57,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionedScalar.H:56:19: note: candidate: Foam::dimensionedScalar Foam::operator/(Foam::scalar, const dimensionedScalar&)
 dimensionedScalar operator/(const scalar, const dimensionedScalar&);
                   ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/dimensionedScalar.H:56:19: note:   no known conversion for argument 2 from ‘const Foam::Tensor<double>’ to ‘const dimensionedScalar& {aka const Foam::dimensioned<double>&}’
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.H:157,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.H:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:363,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:420:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator/(const Foam::DimensionedField<double, GeoMesh>&, const Foam::DimensionedField<double, GeoMesh>&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:96:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:420:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:96:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::DimensionedField<double, GeoMesh>’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.H:157,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.H:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:363,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:447:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator/(const Foam::DimensionedField<double, GeoMesh>&, const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:96:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:447:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:96:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::DimensionedField<double, GeoMesh>’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.H:157,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.H:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:363,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:473:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >&, const Foam::DimensionedField<double, GeoMesh>&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:96:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:473:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:96:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.H:157,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.H:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:363,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:499:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >&, const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:96:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:499:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:96:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.H:157,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.H:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:363,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:534:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator/(const Foam::dimensioned<double>&, const Foam::DimensionedField<double, GeoMesh>&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:98:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:534:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:98:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::DimensionedField<double, GeoMesh>’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.H:157,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.H:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:363,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:561:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator/(const scalar&, const Foam::DimensionedField<double, GeoMesh>&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:98:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:561:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:98:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::DimensionedField<double, GeoMesh>’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.H:157,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.H:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:363,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:572:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator/(const Foam::dimensioned<double>&, const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:98:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:572:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:98:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.H:157,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.H:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:363,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:598:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator/(const scalar&, const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:98:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:598:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedScalarField.C:98:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.C:532,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:366,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:420:44: note: candidate: template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::operator/(const Foam::DimensionedField<Type, GeoMesh>&, const Foam::DimensionedField<double, GeoMesh>&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:357:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:420:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:357:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.C:532,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:366,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:447:44: note: candidate: template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::operator/(const Foam::DimensionedField<Type, GeoMesh>&, const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:357:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:447:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:357:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.C:532,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:366,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:473:44: note: candidate: template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&, const Foam::DimensionedField<double, GeoMesh>&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:357:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:473:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:357:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.C:532,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:366,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:499:44: note: candidate: template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&, const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:357:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:499:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:357:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.C:532,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:366,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:611:44: note: candidate: template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::operator/(const Foam::DimensionedField<Type, GeoMesh>&, const Foam::dimensioned<double>&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:362:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:611:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:362:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.C:532,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:366,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:638:44: note: candidate: template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::operator/(const Foam::DimensionedField<Type, GeoMesh>&, const scalar&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:362:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:638:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:362:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::DimensionedField<Type, GeoMesh>’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.C:532,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:366,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:649:44: note: candidate: template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&, const Foam::dimensioned<double>&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:362:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:649:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:362:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.C:532,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedField.H:366,
                 from lnInclude/fvMesh.H:58,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:675:44: note: candidate: template<class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<Type, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >&, const scalar&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:362:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:675:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:362:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::tmp<Foam::DimensionedField<Type, GeoMesh> >’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.C:32:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.H:158,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.H:195,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:323:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, double> > Foam::operator/(const Foam::FieldField<Field, double>&, const Foam::FieldField<Field, double>&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.C:89:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:323:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.C:89:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::FieldField<Field, double>’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.C:32:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.H:158,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.H:195,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:338:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, double> > Foam::operator/(const Foam::FieldField<Field, double>&, const Foam::tmp<Foam::FieldField<Field, double> >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.C:89:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:338:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.C:89:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::FieldField<Field, double>’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.C:32:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.H:158,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.H:195,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:354:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, double> > Foam::operator/(const Foam::tmp<Foam::FieldField<Field, double> >&, const Foam::FieldField<Field, double>&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.C:89:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:354:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.C:89:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::tmp<Foam::FieldField<Field, double> >’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.C:32:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.H:158,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.H:195,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:370:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, double> > Foam::operator/(const Foam::tmp<Foam::FieldField<Field, double> >&, const Foam::tmp<Foam::FieldField<Field, double> >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.C:89:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:370:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.C:89:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::tmp<Foam::FieldField<Field, double> >’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.C:32:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.H:158,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.H:195,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:407:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, double> > Foam::operator/(const scalar&, const Foam::FieldField<Field, double>&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.C:91:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:407:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.C:91:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::FieldField<Field, double>’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.C:32:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.H:158,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:26,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.H:195,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:422:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, double> > Foam::operator/(const scalar&, const Foam::tmp<Foam::FieldField<Field, double> >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.C:91:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:422:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/scalarFieldField.C:91:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::tmp<Foam::FieldField<Field, double> >’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.C:390,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.H:198,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:323:36: note: candidate: template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::operator/(const Foam::FieldField<Field, Type>&, const Foam::FieldField<Field, double>&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:614:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:323:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:614:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::FieldField<Field, Type>’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.C:390,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.H:198,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:338:36: note: candidate: template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::operator/(const Foam::FieldField<Field, Type>&, const Foam::tmp<Foam::FieldField<Field, double> >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:614:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:338:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:614:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::FieldField<Field, Type>’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.C:390,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.H:198,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:354:36: note: candidate: template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::operator/(const Foam::tmp<Foam::FieldField<Field, Type> >&, const Foam::FieldField<Field, double>&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:614:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:354:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:614:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::tmp<Foam::FieldField<Field, Type> >’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.C:390,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.H:198,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:370:36: note: candidate: template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::operator/(const Foam::tmp<Foam::FieldField<Field, Type> >&, const Foam::tmp<Foam::FieldField<Field, double> >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:614:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:370:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:614:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::tmp<Foam::FieldField<Field, Type> >’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.C:390,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.H:198,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:455:36: note: candidate: template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::operator/(const Foam::FieldField<Field, Type>&, const scalar&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:619:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:455:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:619:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::FieldField<Field, Type>’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.C:390,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldField.H:198,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:470:36: note: candidate: template<template<class> class Field, class Type> Foam::tmp<Foam::FieldField<Field, Type> > Foam::operator/(const Foam::tmp<Foam::FieldField<Field, Type> >&, const scalar&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:619:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:470:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:619:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::tmp<Foam::FieldField<Field, Type> >’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DiagTensor.H:115:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensor.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/coupledPolyPatch.H:41,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/processorPolyPatch.H:42,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/processorTopology.H:30,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/globalMeshData.H:84,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricBoundaryField.C:28,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.C:1352,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DiagTensorI.H:263:1: note: candidate: template<class Cmpt> Foam::DiagTensor<Cmpt> Foam::operator/(Foam::scalar, const Foam::DiagTensor<Cmpt>&)
 operator/(const scalar s, const DiagTensor<Cmpt>& dt)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DiagTensorI.H:263:1: note:   template argument deduction/substitution failed:
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::DiagTensor<Cmpt>’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DiagTensor.H:115:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensor.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/coupledPolyPatch.H:41,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/processorPolyPatch.H:42,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/processorTopology.H:30,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/globalMeshData.H:84,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricBoundaryField.C:28,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.C:1352,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DiagTensorI.H:272:1: note: candidate: template<class Cmpt> Foam::Vector<Cmpt> Foam::operator/(Foam::Vector<Cmpt>, const Foam::DiagTensor<Cmpt>&)
 operator/(const Vector<Cmpt> v, const DiagTensor<Cmpt>& dt)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DiagTensorI.H:272:1: note:   template argument deduction/substitution failed:
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘Foam::Vector<Cmpt>’ and ‘double’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:42:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/coupledPolyPatch.H:41,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/processorPolyPatch.H:42,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/processorTopology.H:30,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/globalMeshData.H:84,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricBoundaryField.C:28,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.C:1352,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:166:24: note: candidate: Foam::tmp<Foam::Field<Foam::Vector<double> > > Foam::operator/(const Foam::UList<Foam::Vector<double> >&, const Foam::UList<Foam::DiagTensor<double> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:66:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, diagTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:166:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::UList<Foam::Vector<double> >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:66:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, diagTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:173:24: note: candidate: Foam::tmp<Foam::Field<Foam::Vector<double> > > Foam::operator/(const Foam::UList<Foam::Vector<double> >&, const Foam::tmp<Foam::Field<Foam::DiagTensor<double> > >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:66:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, diagTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:173:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::UList<Foam::Vector<double> >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:66:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, diagTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:180:24: note: candidate: Foam::tmp<Foam::Field<Foam::Vector<double> > > Foam::operator/(const Foam::tmp<Foam::Field<Foam::Vector<double> > >&, const Foam::UList<Foam::DiagTensor<double> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:66:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, diagTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:180:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::tmp<Foam::Field<Foam::Vector<double> > >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:66:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, diagTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:187:24: note: candidate: Foam::tmp<Foam::Field<Foam::Vector<double> > > Foam::operator/(const Foam::tmp<Foam::Field<Foam::Vector<double> > >&, const Foam::tmp<Foam::Field<Foam::DiagTensor<double> > >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:66:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, diagTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:187:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::tmp<Foam::Field<Foam::Vector<double> > >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:66:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, diagTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:207:24: note: candidate: Foam::tmp<Foam::Field<Foam::Vector<double> > > Foam::operator/(const vector&, const Foam::UList<Foam::DiagTensor<double> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:67:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, diagTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:207:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const vector& {aka const Foam::Vector<double>&}’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:67:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, diagTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:214:24: note: candidate: Foam::tmp<Foam::Field<Foam::Vector<double> > > Foam::operator/(const vector&, const Foam::tmp<Foam::Field<Foam::DiagTensor<double> > >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:67:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, diagTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:214:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const vector& {aka const Foam::Vector<double>&}’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:67:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, diagTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:232:24: note: candidate: Foam::tmp<Foam::Field<Foam::Vector<double> > > Foam::operator/(const Foam::UList<Foam::Vector<double> >&, const diagTensor&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:67:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, diagTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:232:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::UList<Foam::Vector<double> >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:67:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, diagTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:239:24: note: candidate: Foam::tmp<Foam::Field<Foam::Vector<double> > > Foam::operator/(const Foam::tmp<Foam::Field<Foam::Vector<double> > >&, const diagTensor&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:67:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, diagTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:239:24: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::tmp<Foam::Field<Foam::Vector<double> > >&’
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/diagTensorField.H:67:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, diagTensor, /, divide)
 ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/quaternion.H:304:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/transformField.H:39,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/vectorTensorTransform.H:45,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/mapDistribute.H:138,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/globalMeshDataTemplates.C:28,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/globalMeshData.H:627,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricBoundaryField.C:28,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.C:1352,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/quaternionI.H:675:25: note: candidate: Foam::quaternion Foam::operator/(const Foam::quaternion&, const Foam::quaternion&)
 inline Foam::quaternion Foam::operator/
                         ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/quaternionI.H:675:25: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::quaternion&’
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/quaternionI.H:697:25: note: candidate: Foam::quaternion Foam::operator/(const Foam::quaternion&, Foam::scalar)
 inline Foam::quaternion Foam::operator/(const quaternion& q, const scalar s)
                         ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/quaternionI.H:697:25: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::quaternion&’
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/septernion.H:206:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/transformField.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/vectorTensorTransform.H:45,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/mapDistribute.H:138,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/globalMeshDataTemplates.C:28,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/globalMeshData.H:627,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricBoundaryField.C:28,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.C:1352,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/septernionI.H:230:25: note: candidate: Foam::septernion Foam::operator/(const Foam::septernion&, const Foam::quaternion&)
 inline Foam::septernion Foam::operator/
                         ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/septernionI.H:230:25: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::septernion&’
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/septernionI.H:254:25: note: candidate: Foam::septernion Foam::operator/(const Foam::septernion&, const Foam::septernion&)
 inline Foam::septernion Foam::operator/
                         ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/septernionI.H:254:25: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::septernion&’
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/septernionI.H:276:25: note: candidate: Foam::septernion Foam::operator/(const Foam::septernion&, Foam::scalar)
 inline Foam::septernion Foam::operator/(const septernion& tr, const scalar s)
                         ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/septernionI.H:276:25: note:   no known conversion for argument 1 from ‘Foam::scalar {aka double}’ to ‘const Foam::septernion&’
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.C:1353,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:517:54: note: candidate: template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::operator/(const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::GeometricField<double, PatchField, GeoMesh>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:580:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:517:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:580:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.C:1353,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:546:54: note: candidate: template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::operator/(const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:580:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:546:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:580:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.C:1353,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:572:54: note: candidate: template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&, const Foam::GeometricField<double, PatchField, GeoMesh>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:580:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:572:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:580:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.C:1353,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:598:54: note: candidate: template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&, const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:580:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:598:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:580:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(Type, Type, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.C:1353,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:736:54: note: candidate: template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::operator/(const Foam::GeometricField<Type, PatchField, GeoMesh>&, const Foam::dimensioned<double>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:585:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:736:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:585:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.C:1353,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:765:54: note: candidate: template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::operator/(const Foam::GeometricField<Type, PatchField, GeoMesh>&, const scalar&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:585:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:765:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:585:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::GeometricField<Type, PatchField, GeoMesh>’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.C:1353,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:776:54: note: candidate: template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&, const Foam::dimensioned<double>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:585:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:776:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:585:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.C:1353,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricField.H:660,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:802:54: note: candidate: template<class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >&, const scalar&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:585:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:802:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:585:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
 BINARY_TYPE_OPERATOR_FS(Type, Type, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::tmp<Foam::GeometricField<Type, PatchField, GeoMesh> >’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:173,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:517:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator/(const Foam::GeometricField<double, PatchField, GeoMesh>&, const Foam::GeometricField<double, PatchField, GeoMesh>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:114:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:517:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:114:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::GeometricField<double, PatchField, GeoMesh>’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:173,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:546:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator/(const Foam::GeometricField<double, PatchField, GeoMesh>&, const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:114:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:546:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:114:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::GeometricField<double, PatchField, GeoMesh>’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:173,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:572:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >&, const Foam::GeometricField<double, PatchField, GeoMesh>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:114:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:572:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:114:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:173,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:598:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >&, const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:114:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:598:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:114:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(scalar, scalar, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:173,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:645:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator/(const Foam::dimensioned<double>&, const Foam::GeometricField<double, PatchField, GeoMesh>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:116:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:645:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:116:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::GeometricField<double, PatchField, GeoMesh>’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:173,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:674:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator/(const scalar&, const Foam::GeometricField<double, PatchField, GeoMesh>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:116:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:674:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:116:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::GeometricField<double, PatchField, GeoMesh>’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:173,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:685:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator/(const Foam::dimensioned<double>&, const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:116:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:685:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:116:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.H:173,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:711:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator/(const scalar&, const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:116:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:711:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricScalarField.C:116:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
 BINARY_TYPE_OPERATOR_SF(scalar, scalar, scalar, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.H:69,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:517:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::GeometricField<double, PatchField, GeoMesh>&, const Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:43:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:517:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:43:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::GeometricField<double, PatchField, GeoMesh>’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.H:69,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:546:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::GeometricField<double, PatchField, GeoMesh>&, const Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:43:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:546:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:43:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::GeometricField<double, PatchField, GeoMesh>’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.H:69,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:572:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >&, const Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:43:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:572:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:43:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.H:69,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:598:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >&, const Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:43:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:598:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:43:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.H:69,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:645:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::dimensioned<double>&, const Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:645:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh>’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.H:69,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:674:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> > Foam::operator/(const scalar&, const Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:674:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh>’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.H:69,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:685:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::dimensioned<double>&, const Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:685:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> >’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.H:69,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:711:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> > Foam::operator/(const scalar&, const Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:711:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> >’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.H:69,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:736:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::GeometricField<double, PatchField, GeoMesh>&, const Foam::dimensioned<Foam::SphericalTensor<double> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:736:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::GeometricField<double, PatchField, GeoMesh>’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.H:69,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:765:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::GeometricField<double, PatchField, GeoMesh>&, const sphericalTensor&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:765:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::GeometricField<double, PatchField, GeoMesh>’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.H:69,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:776:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >&, const Foam::dimensioned<Foam::SphericalTensor<double> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:776:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.H:69,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:802:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::SphericalTensor<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >&, const sphericalTensor&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:802:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.H:69,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedTensorField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:420:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> > Foam::operator/(const Foam::DimensionedField<double, GeoMesh>&, const Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh>&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:43:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:420:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:43:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::DimensionedField<double, GeoMesh>’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.H:69,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedTensorField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:447:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> > Foam::operator/(const Foam::DimensionedField<double, GeoMesh>&, const Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> >&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:43:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:447:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:43:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::DimensionedField<double, GeoMesh>’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.H:69,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedTensorField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:473:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >&, const Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh>&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:43:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:473:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:43:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.H:69,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedTensorField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:499:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >&, const Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> >&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:43:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:499:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:43:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.H:69,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedTensorField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:534:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> > Foam::operator/(const Foam::dimensioned<double>&, const Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh>&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:685:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:534:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:685:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh>’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.H:69,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedTensorField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:561:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> > Foam::operator/(const scalar&, const Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh>&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:685:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:561:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:685:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh>’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.H:69,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedTensorField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:572:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> > Foam::operator/(const Foam::dimensioned<double>&, const Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> >&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:685:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:572:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:685:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> >’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.H:69,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedTensorField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:598:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> > Foam::operator/(const scalar&, const Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> >&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:685:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:598:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:685:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> >’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.H:69,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedTensorField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:611:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> > Foam::operator/(const Foam::DimensionedField<double, GeoMesh>&, const Foam::dimensioned<Foam::SphericalTensor<double> >&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:686:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:611:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:686:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::DimensionedField<double, GeoMesh>’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.H:69,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedTensorField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:638:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> > Foam::operator/(const Foam::DimensionedField<double, GeoMesh>&, const sphericalTensor&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:686:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:638:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:686:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::DimensionedField<double, GeoMesh>’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.H:69,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedTensorField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:649:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >&, const Foam::dimensioned<Foam::SphericalTensor<double> >&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:686:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:649:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:686:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:29:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.H:69,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedTensorField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:40,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:675:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<Foam::SphericalTensor<double>, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >&, const sphericalTensor&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:686:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:675:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:686:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/DimensionedSphericalTensorField.C:44:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:517:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh>&, const Foam::GeometricField<Foam::Tensor<double>, PatchField, GeoMesh>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:62:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:517:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:62:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh>’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:546:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh>&, const Foam::tmp<Foam::GeometricField<Foam::Tensor<double>, PatchField, GeoMesh> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:62:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:546:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:62:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh>’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:572:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> >&, const Foam::GeometricField<Foam::Tensor<double>, PatchField, GeoMesh>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:62:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:572:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:62:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> >’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:598:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> >&, const Foam::tmp<Foam::GeometricField<Foam::Tensor<double>, PatchField, GeoMesh> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:62:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:598:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:62:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> >’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:645:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::dimensioned<Foam::Vector<double> >&, const Foam::GeometricField<Foam::Tensor<double>, PatchField, GeoMesh>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:63:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:645:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:63:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:56: note:   cannot convert ‘((Foam::Gebart*)this)->Foam::Gebart::vfmax_’ (type ‘Foam::scalar {aka double}’) to type ‘const Foam::dimensioned<Foam::Vector<double> >&’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                        ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:674:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> > Foam::operator/(const vector&, const Foam::GeometricField<Foam::Tensor<double>, PatchField, GeoMesh>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:63:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:674:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:63:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:56: note:   cannot convert ‘((Foam::Gebart*)this)->Foam::Gebart::vfmax_’ (type ‘Foam::scalar {aka double}’) to type ‘const vector& {aka const Foam::Vector<double>&}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                        ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:685:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::dimensioned<Foam::Vector<double> >&, const Foam::tmp<Foam::GeometricField<Foam::Tensor<double>, PatchField, GeoMesh> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:63:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:685:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:63:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:56: note:   cannot convert ‘((Foam::Gebart*)this)->Foam::Gebart::vfmax_’ (type ‘Foam::scalar {aka double}’) to type ‘const Foam::dimensioned<Foam::Vector<double> >&’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                        ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:711:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> > Foam::operator/(const vector&, const Foam::tmp<Foam::GeometricField<Foam::Tensor<double>, PatchField, GeoMesh> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:63:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:711:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:813:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:63:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:56: note:   cannot convert ‘((Foam::Gebart*)this)->Foam::Gebart::vfmax_’ (type ‘Foam::scalar {aka double}’) to type ‘const vector& {aka const Foam::Vector<double>&}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                        ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:736:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh>&, const Foam::dimensioned<Foam::Tensor<double> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:63:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:736:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:63:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh>’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:765:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh>&, const tensor&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:63:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:765:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:63:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh>’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:776:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> >&, const Foam::dimensioned<Foam::Tensor<double> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:63:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:776:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:63:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> >’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:30:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:802:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> > Foam::operator/(const Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> >&, const tensor&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:63:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:802:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:814:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:63:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, '|', divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::tmp<Foam::GeometricField<Foam::Vector<double>, PatchField, GeoMesh> >’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:32:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.H:72,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:323:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, Foam::SphericalTensor<double> > > Foam::operator/(const Foam::FieldField<Field, double>&, const Foam::FieldField<Field, Foam::SphericalTensor<double> >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:49:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:323:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:49:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::FieldField<Field, double>’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:32:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.H:72,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:338:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, Foam::SphericalTensor<double> > > Foam::operator/(const Foam::FieldField<Field, double>&, const Foam::tmp<Foam::FieldField<Field, Foam::SphericalTensor<double> > >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:49:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:338:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:49:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::FieldField<Field, double>’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:32:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.H:72,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:354:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, Foam::SphericalTensor<double> > > Foam::operator/(const Foam::tmp<Foam::FieldField<Field, double> >&, const Foam::FieldField<Field, Foam::SphericalTensor<double> >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:49:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:354:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:49:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::tmp<Foam::FieldField<Field, double> >’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:32:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.H:72,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:370:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, Foam::SphericalTensor<double> > > Foam::operator/(const Foam::tmp<Foam::FieldField<Field, double> >&, const Foam::tmp<Foam::FieldField<Field, Foam::SphericalTensor<double> > >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:49:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:370:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:49:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::tmp<Foam::FieldField<Field, double> >’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:32:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.H:72,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:407:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, Foam::SphericalTensor<double> > > Foam::operator/(const scalar&, const Foam::FieldField<Field, Foam::SphericalTensor<double> >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:487:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:50:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:407:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:487:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:50:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::FieldField<Field, Foam::SphericalTensor<double> >’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:32:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.H:72,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:422:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, Foam::SphericalTensor<double> > > Foam::operator/(const scalar&, const Foam::tmp<Foam::FieldField<Field, Foam::SphericalTensor<double> > >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:487:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:50:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:422:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:487:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:50:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   ‘const Foam::Tensor<double>’ is not derived from ‘const Foam::tmp<Foam::FieldField<Field, Foam::SphericalTensor<double> > >’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:32:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.H:72,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:455:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, Foam::SphericalTensor<double> > > Foam::operator/(const Foam::FieldField<Field, double>&, const sphericalTensor&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:488:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:50:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:455:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:488:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:50:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::FieldField<Field, double>’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:32:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.H:72,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:470:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, Foam::SphericalTensor<double> > > Foam::operator/(const Foam::tmp<Foam::FieldField<Field, double> >&, const sphericalTensor&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:488:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:50:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:470:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:488:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/sphericalTensorFieldField.C:50:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(sphericalTensor, scalar, sphericalTensor, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::tmp<Foam::FieldField<Field, double> >’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.C:32:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.H:86,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:323:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, Foam::Vector<double> > > Foam::operator/(const Foam::FieldField<Field, Foam::Vector<double> >&, const Foam::FieldField<Field, Foam::Tensor<double> >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.C:63:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:323:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.C:63:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::FieldField<Field, Foam::Vector<double> >’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.C:32:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.H:86,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:338:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, Foam::Vector<double> > > Foam::operator/(const Foam::FieldField<Field, Foam::Vector<double> >&, const Foam::tmp<Foam::FieldField<Field, Foam::Tensor<double> > >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.C:63:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:338:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.C:63:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::FieldField<Field, Foam::Vector<double> >’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.C:32:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.H:86,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:354:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, Foam::Vector<double> > > Foam::operator/(const Foam::tmp<Foam::FieldField<Field, Foam::Vector<double> > >&, const Foam::FieldField<Field, Foam::Tensor<double> >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.C:63:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:354:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.C:63:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::tmp<Foam::FieldField<Field, Foam::Vector<double> > >’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.C:32:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.H:86,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:370:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, Foam::Vector<double> > > Foam::operator/(const Foam::tmp<Foam::FieldField<Field, Foam::Vector<double> > >&, const Foam::tmp<Foam::FieldField<Field, Foam::Tensor<double> > >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.C:63:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:370:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.C:63:1: note: in expansion of macro ‘BINARY_OPERATOR’
 BINARY_OPERATOR(vector, vector, tensor, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::tmp<Foam::FieldField<Field, Foam::Vector<double> > >’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.C:32:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.H:86,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:407:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, Foam::Vector<double> > > Foam::operator/(const vector&, const Foam::FieldField<Field, Foam::Tensor<double> >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:487:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.C:64:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:407:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:487:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.C:64:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:56: note:   cannot convert ‘((Foam::Gebart*)this)->Foam::Gebart::vfmax_’ (type ‘Foam::scalar {aka double}’) to type ‘const vector& {aka const Foam::Vector<double>&}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                        ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.C:32:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.H:86,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:422:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, Foam::Vector<double> > > Foam::operator/(const vector&, const Foam::tmp<Foam::FieldField<Field, Foam::Tensor<double> > >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:487:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.C:64:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:422:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:487:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_SF’
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.C:64:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:56: note:   cannot convert ‘((Foam::Gebart*)this)->Foam::Gebart::vfmax_’ (type ‘Foam::scalar {aka double}’) to type ‘const vector& {aka const Foam::Vector<double>&}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                        ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.C:32:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.H:86,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:455:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, Foam::Vector<double> > > Foam::operator/(const Foam::FieldField<Field, Foam::Vector<double> >&, const tensor&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:488:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.C:64:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:455:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:488:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.C:64:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::FieldField<Field, Foam::Vector<double> >’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.C:32:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.H:86,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.C:27,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricTensorField.H:88,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/GeometricFields.H:36,
                 from lnInclude/volFields.H:37,
                 from lnInclude/permeabilityLaw.H:40,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:470:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, Foam::Vector<double> > > Foam::operator/(const Foam::tmp<Foam::FieldField<Field, Foam::Vector<double> > >&, const tensor&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:488:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.C:64:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, divide)
 ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:470:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:488:5: note: in expansion of macro ‘BINARY_TYPE_OPERATOR_FS’
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/tensorFieldField.C:64:1: note: in expansion of macro ‘BINARY_TYPE_OPERATOR’
 BINARY_TYPE_OPERATOR(vector, vector, tensor, /, divide)
 ^
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:176:69: note:   mismatched types ‘const Foam::tmp<Foam::FieldField<Field, Foam::Vector<double> > >’ and ‘Foam::scalar {aka double}’
         R_[j].zz() = scalar(1) / (constB2 * pow( (sqrt(vfmax_/FVF_[j]) - 1), scalar(2.5)));                       
                                                                     ^
In file included from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/token.H:49:0,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/UListIO.C:28,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/UList.C:233,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/UList.H:484,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/List.H:43,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/HashTable.C:30,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/HashTable.H:566,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/objectRegistry.H:38,
                 from /home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/polyMesh.H:44,
                 from lnInclude/fvMesh.H:50,
                 from lnInclude/permeabilityLaw.H:36,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
lnInclude/permeabilityLaw.H: In instantiation of ‘static Foam::autoPtr<Foam::permeabilityLaw> Foam::permeabilityLaw::adddictionaryConstructorToTable<permeabilityLawType>::New(const Foam::fvMesh&, Foam::word, const label&, const Foam::dictionary&) [with permeabilityLawType = Foam::Gebart; Foam::label = int]’:
lnInclude/permeabilityLaw.H:78:9:   required from ‘Foam::permeabilityLaw::adddictionaryConstructorToTable<permeabilityLawType>::adddictionaryConstructorToTable(const Foam::word&) [with permeabilityLawType = Foam::Gebart]’
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:35:5:   required from here
/home/julian/OpenFOAM-6/src/OpenFOAM/lnInclude/runTimeSelectionTables.H:72:64: error: invalid new-expression of abstract class type ‘Foam::Gebart’
             return autoPtr<baseType>(new baseType##Type parList);              \
                                                                ^
lnInclude/permeabilityLaw.H:78:9: note: in expansion of macro ‘declareRunTimeSelectionTable’
         declareRunTimeSelectionTable
         ^
In file included from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:0:
cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:49:7: note:   because the following virtual functions are pure within ‘Foam::Gebart’:
 class Gebart
       ^
In file included from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.H:38:0,
                 from cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.C:26:
lnInclude/permeabilityLaw.H:141:34: note: 	virtual Foam::tmp<Foam::Field<Foam::Tensor<double> > > Foam::permeabilityLaw::calcResistance(Foam::tensorField&)
         virtual tmp<tensorField> calcResistance(tensorField& R) = 0;
                                  ^
/home/julian/OpenFOAM-6/wmake/rules/General/transform:25: recipe for target '/home/julian/OpenFOAM-6/platforms/linux64GccDPInt32Opt/src/finiteVolume/cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.o' failed
make: *** [/home/julian/OpenFOAM-6/platforms/linux64GccDPInt32Opt/src/finiteVolume/cfdTools/general/porosityModel/fiberDarcyForchheimer/Gebart/Gebart.o] Error 1
