/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.1.1                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

h       0.005; // height in m
l       0.4; // length in m
r       0.005; // radius of inlet in m

zmin    0;
zmax    $h;

rneg    #calc "-$r";

lmax    #calc "$l/2";
lmin    #calc "-$lmax";

lhalfpos    #calc "$lmax/2";
lhalfneg    #calc "-$lhalfpos";

larc        #calc "0.707107*$lhalfpos"; // point on 45° angle bisector of outer circle
larcneg     #calc "-$larc";
rarc        #calc "0.707107*$r"; // point on 45° angle bisector of radius
rarcneg     #calc "-$rarc";


cosL20      #calc "0.939693*$lhalfpos";
sinL20      #calc "0.34202*$lhalfpos";
cosR20      #calc "0.939693*$r";
sinR20      #calc "0.34202*$r";
cosL20neg   #calc "-$cosL20";
sinL20neg   #calc "-$sinL20";
cosR20neg   #calc "-$cosR20";
sinR20neg   #calc "-$sinR20";


vertices
(
    ($r 0 $zmin)
    ($lhalfpos 0 $zmin)
    ($lmax 0 $zmin)
    ($lmax $larc $zmin)
    ($larc $larc $zmin)
    ($rarc $rarc 0)
    ($lmax $lmax $zmin)
    ($larc $lmax $zmin)
    (0 $lmax $zmin)
    (0 $lhalfpos $zmin)
    (0 $r $zmin) //10
    ($r 0 $zmax)
    ($lhalfpos 0 $zmax)
    ($lmax 0 $zmax)
    ($lmax $larc $zmax)
    ($larc $larc $zmax)
    ($rarc $rarc $zmax)
    ($lmax $lmax $zmax)
    ($larc $lmax $zmax)
    (0 $lmax $zmax)
    (0 $lhalfpos $zmax)
    (0 $r $zmax)
	
	($rneg 0 $zmin) //22
    ($lhalfneg 0 $zmin)
    ($lmin 0 $zmin)
    ($lmin $larcneg $zmin)
    ($larcneg $larcneg $zmin)
    ($rarcneg $rarcneg $zmin)
    ($lmin $lmin $zmin)
    ($larcneg $lmin $zmin)
    (0 $lmin $zmin)
    (0 $lhalfneg $zmin)
    (0 $rneg $zmin)
    ($rneg 0 $zmax)
    ($lhalfneg 0 $zmax)
    ($lmin 0 $zmax)
    ($lmin $larcneg $zmax)
    ($larcneg $larcneg $zmax)
    ($rarcneg $rarcneg $zmax)
    ($lmin $lmin $zmax)
    ($larcneg $lmin $zmax)
    (0 $lmin $zmax)
    (0 $lhalfneg $zmax)
    (0 $rneg $zmax)
	
	($lmin $larc $zmin)	//44 (3)
    ($larcneg $larc $zmin)
    ($rarcneg $rarc $zmin)
    ($lmin $lmax $zmin)
    ($larcneg $lmax $zmin)
	
	($lmax $larcneg $zmin) //49
    ($larc $larcneg $zmin)
    ($rarc $rarcneg $zmin)
    ($lmax $lmin $zmin)
    ($larc $lmin $zmin)
	
	($lmin $larc $zmax)	//54 (3)
    ($larcneg $larc $zmax)
    ($rarcneg $rarc $zmax)
    ($lmin $lmax $zmax)
    ($larcneg $lmax $zmax)
	
	($lmax $larcneg $zmax) //59
    ($larc $larcneg $zmax)
    ($rarc $rarcneg $zmax)
    ($lmax $lmin $zmax)
    ($larc $lmin $zmax)
);

blocks
(

    hex (5 4 9 10 16 15 20 21) (20 10 3) simpleGrading (1 1 1)
    hex (0 1 4 5 11 12 15 16) (20 10 3) simpleGrading (1 1 1)
    hex (1 2 3 4 12 13 14 15) (20 10 3) simpleGrading (1 1 1)
    hex (4 3 6 7 15 14 17 18) (20 20 3) simpleGrading (1 1 1)
    hex (9 4 7 8 20 15 18 19) (10 20 3) simpleGrading (1 1 1)
	
	hex (27 26 31 32 38 37 42 43) (20 10 3) simpleGrading (1 1 1)
    hex (22 23 26 27 33 34 37 38) (20 10 3) simpleGrading (1 1 1)
    hex (23 24 25 26 34 35 36 37) (20 10 3) simpleGrading (1 1 1)
    hex (26 25 28 29 37 36 39 40) (20 20 3) simpleGrading (1 1 1)
    hex (31 26 29 30 42 37 40 41) (10 20 3) simpleGrading (1 1 1)
	
	hex (45 46 10 9 55 56 21 20) (20 10 3) simpleGrading (1 1 1) 	//0
	hex (9 8 48 45 20 19 58 55) (20 10 3) simpleGrading (1 1 1)		//4
	hex (45 48 47 44 55 58 57 54) (20 20 3) simpleGrading (1 1 1)	//3
	
	hex (51 50 1 0 61 60 12 11) (20 10 3) simpleGrading (1 1 1) 	//1
	hex (2 1 50 49 13 12 60 59) (20 10 3) simpleGrading (1 1 1)		//2
	hex (50 53 52 49 60 63 62 59) (20 20 3) simpleGrading (1 1 1)	//3
	
	hex (46 45 23 22 56 55 34 33) (20 10 3) simpleGrading (1 1 1) 	//0
	hex (24 23 45 44 35 34 55 54) (20 10 3) simpleGrading (1 1 1)	//4
		
	hex (50 51 32 31 60 61 43 42) (20 10 3) simpleGrading (1 1 1) 	//1
	hex (31 30 53 50 42 41 63 60) (20 10 3) simpleGrading (1 1 1)	//2
	
	
	
	
);

edges
(

    arc 0 5 ($cosR20 $sinR20 $zmin)
    arc 5 10 ($sinR20 $cosR20 $zmin)
    arc 1 4 ($cosL20 $sinL20 $zmin)
    arc 4 9 ($sinL20 $cosL20 $zmin)
    arc 11 16 ($cosR20 $sinR20 $zmax)
    arc 16 21 ($sinR20 $cosR20 $zmax)
    arc 12 15 ($cosL20 $sinL20 $zmax)
    arc 15 20 ($sinL20 $cosL20 $zmax)
	
	arc 22 27 ($cosR20neg $sinR20neg $zmin)
    arc 27 32 ($sinR20neg $cosR20neg $zmin)
    arc 23 26 ($cosL20neg $sinL20neg $zmin)
    arc 26 31 ($sinL20neg $cosL20neg $zmin)
    arc 33 38 ($cosR20neg $sinR20neg $zmax)
    arc 38 43 ($sinR20neg $cosR20neg $zmax)
    arc 34 37 ($cosL20neg $sinL20neg $zmax)
    arc 37 42 ($sinL20neg $cosL20neg $zmax)
	
	arc 0 51 ($cosR20 $sinR20neg $zmin)
	arc 11 61 ($cosR20 $sinR20neg $zmax)
	arc 1 50 ($cosL20 $sinL20neg $zmin)
    arc 12 60 ($sinL20 $cosL20neg $zmax)
	
    arc 46 10 ($sinR20neg $cosR20 $zmin)    
	arc 56 21 ($sinR20neg $cosR20 $zmax)
	arc 9 45 ($cosL20neg $sinL20 $zmin)
    arc 20 55 ($sinL20neg $cosL20 $zmax)
	
	arc 32 51 ($cosR20 $sinR20neg $zmin)
	arc 43 61 ($cosR20 $sinR20neg $zmax)
	arc 31 50 ($cosL20 $sinL20neg $zmin)
    arc 42 60 ($sinL20 $cosL20neg $zmax)
	
    arc 22 46 ($sinR20neg $cosR20 $zmin)    
	arc 33 56 ($sinR20neg $cosR20 $zmax)
	arc 23 45 ($cosL20neg $sinL20 $zmin)
    arc 34 55 ($sinL20neg $cosL20 $zmax)
	
	
);

boundary
(
    inlet
    {
        type patch;
        faces
        (
            (0 5 16 11)
			(5 10 21 16) 
			(22 27 38 33)
			(27 32 43 38) 
			(0 51 61 11)
			(10 46 56 21)
			(32 51 61 43)
			(22 46 56 33)
        );
    }
	outlet
    {
        type patch;
        faces
        (
            (2 3 14 13)
			(3 6 17 14)
			(6 7 18 17)
			(7 8 19 18)
			
			(24 25 36 35)
			(25 28 39 36)
			(28 29 40 39)
			(29 30 41 40)
			
			(8 48 58 19)
			(48 47 57 58)
			(47 44 54 57)
			(44 24 54 35)
			
			(2 49 59 13)
			(49 52 62 59)
			(52 53 63 62)
			(53 30 41 63)
			
        );
    }
);

mergePatchPairs
(
);


// ************************************************************************* //
